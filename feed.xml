<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://wsttask.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://wsttask.github.io/" rel="alternate" type="text/html" /><updated>2024-02-14T20:47:59+08:00</updated><id>https://wsttask.github.io/feed.xml</id><entry><title type="html">移动端浏览器主页</title><link href="https://wsttask.github.io/browser" rel="alternate" type="text/html" title="移动端浏览器主页" /><published>2024-02-14T20:47:47+08:00</published><updated>2024-02-14T20:47:47+08:00</updated><id>https://wsttask.github.io/portal</id><content type="html" xml:base="https://wsttask.github.io/browser"><![CDATA[<h1 id="gitee">gitee</h1>

<h3 id="web"><a href="https://gitee.com/wsttask/web/tree/master">web</a></h3>

<h1 id="github">github</h1>

<h3 id="wsttaskgithubio"><a href="https://wsttask.github.io/index.html">wsttask.github.io</a></h3>

<h1 id="tanslation">tanslation</h1>

<h3 id="youdao"><a href="https://m.youdao.com/translate?vendor=fanyi.web">youdao</a></h3>

<h1 id="wps">WPS</h1>

<h3 id="tasks"><a href="https://www.kdocs.cn/l/coVFRqQ7x1UZ">tasks</a></h3>

<h1 id="mail">Mail</h1>

<h3 id="outlook"><a href="https://outlook.live.com/mail">outlook</a></h3>

<h1 id="time">TIME</h1>

<h3 id="北京时间"><a href="https://beijing-time.org/">北京时间</a></h3>

<h1 id="game">GAME</h1>

<h3 id="aknight"><a href="https://ak.hypergryph.com/">aknight</a></h3>

<h1 id="音标">音标</h1>

<h3 id="英语兔"><a href="https://www.bilibili.com/video/BV1iV411z7Nj/">英语兔</a></h3>]]></content><author><name></name></author><category term="portal" /><summary type="html"><![CDATA[gitee]]></summary></entry><entry><title type="html">/æ/</title><link href="https://wsttask.github.io/00E6" rel="alternate" type="text/html" title="/æ/" /><published>2024-02-14T20:24:54+08:00</published><updated>2024-02-14T20:24:54+08:00</updated><id>https://wsttask.github.io/00E6</id><content type="html" xml:base="https://wsttask.github.io/00E6"><![CDATA[<h1 id="æ">/æ/</h1>

<p><img src="https://wsttask.github.io/picture/images/courses/pronuncitaion/image-20230620195235627.png" alt="image-20230620195235627" /></p>

<p><img src="https://wsttask.github.io/picture/images/courses/pronuncitaion/images/image-20230622201447590.png" alt="image-20230622201447590" /></p>

<p><img src="https://wsttask.github.io/picture/images/courses/pronuncitaion/images/image-20230622201524989.png" alt="image-20230622201524989" /></p>]]></content><author><name></name></author><category term="pronunciation" /><summary type="html"><![CDATA[/æ/]]></summary></entry><entry><title type="html">Kramdown</title><link href="https://wsttask.github.io/kramdown/2024/02/14/Kramdown.html" rel="alternate" type="text/html" title="Kramdown" /><published>2024-02-14T20:20:45+08:00</published><updated>2024-02-14T20:20:45+08:00</updated><id>https://wsttask.github.io/kramdown/2024/02/14/Kramdown</id><content type="html" xml:base="https://wsttask.github.io/kramdown/2024/02/14/Kramdown.html"><![CDATA[<p>Kramdown 是 Jekyll 的默认 Markdown 渲染器，通常无需额外配置即可运行良好。但是，它确实支持许多配置选项。</p>

<table>
  <tbody>
    <tr>
      <td>[Home</td>
      <td>kramdown (gettalong.org)](https://kramdown.gettalong.org/)</td>
    </tr>
  </tbody>
</table>]]></content><author><name></name></author><category term="kramdown" /><summary type="html"><![CDATA[Kramdown 是 Jekyll 的默认 Markdown 渲染器，通常无需额外配置即可运行良好。但是，它确实支持许多配置选项。]]></summary></entry><entry><title type="html">音标</title><link href="https://wsttask.github.io/pronunciation/2024/02/14/README.html" rel="alternate" type="text/html" title="音标" /><published>2024-02-14T20:18:29+08:00</published><updated>2024-02-14T20:18:29+08:00</updated><id>https://wsttask.github.io/pronunciation/2024/02/14/README</id><content type="html" xml:base="https://wsttask.github.io/pronunciation/2024/02/14/README.html"><![CDATA[<h2 id="元音">元音</h2>

<table>
  <thead>
    <tr>
      <th>详解</th>
      <th>视频</th>
      <th>网页版详解</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><a href="./0065.md">/e/</a></td>
      <td><a href="https://www.bilibili.com/video/BV1iV411z7Nj?p=11">/e/</a></td>
      <td>1</td>
    </tr>
    <tr>
      <td><a href="./00E6.md">/æ/</a></td>
      <td><a href="https://www.bilibili.com/video/BV1iV411z7Nj?p=16">/æ/</a></td>
      <td>1</td>
    </tr>
    <tr>
      <td><a href="./0259.md">/ə/</a></td>
      <td><a href="https://www.bilibili.com/video/BV1iV411z7Nj?p=13">/ə/</a></td>
      <td>1</td>
    </tr>
    <tr>
      <td><a href="./0061_028A.md">/aʊ/</a></td>
      <td><a href="https://www.bilibili.com/video/BV1iV411z7Nj?p=22">/aʊ/</a></td>
      <td>1</td>
    </tr>
    <tr>
      <td><a href="./0061_026A.md">/aɪ/</a></td>
      <td><a href="https://www.bilibili.com/video/BV1iV411z7Nj?p=21">/aɪ/</a></td>
      <td>1</td>
    </tr>
    <tr>
      <td><a href="./026A.md">/ɪ/</a></td>
      <td><a href="https://www.bilibili.com/video/BV1iV411z7Nj?p=8">/ɪ/</a></td>
      <td>1</td>
    </tr>
    <tr>
      <td><a href="./0251.md">/ɑː/</a></td>
      <td><a href="https://www.bilibili.com/video/BV1iV411z7Nj?p=17">/ɑː/</a></td>
      <td>1</td>
    </tr>
    <tr>
      <td><a href="./s-z.md">/s/</a>-<a href="./s-z.md">/z/</a></td>
      <td><a href="https://www.bilibili.com/video/BV1iV411z7Nj?p=33">/s/-/z/</a></td>
      <td>1</td>
    </tr>
  </tbody>
</table>

<h2 id="辅音">辅音</h2>

<ol>
  <li><strong>元音（Vowels）:</strong>
    <ul>
      <li>[i] - U+0069 e</li>
      <li>[e] - U+0065</li>
      <li>[ə] - U+0259</li>
      <li>[æ] - U+00E6</li>
      <li>[ɑ] - U+0251</li>
      <li>[ɔ] - U+0254</li>
      <li>[u] - U+0075</li>
      <li>[o] - U+006F</li>
    </ul>
  </li>
  <li><strong>辅音（Consonants）:</strong>
    <ul>
      <li>[p] - U+0070</li>
      <li>[t] - U+0074</li>
      <li>[k] - U+006B</li>
      <li>[b] - U+0062</li>
      <li>[d] - U+0064</li>
      <li>[ɡ] - U+0261</li>
      <li>[f] - U+0066</li>
      <li>[v] - U+0076</li>
      <li>[θ] - U+03B8</li>
      <li>[ð] - U+00F0</li>
      <li>[s] - U+0073</li>
      <li>[z] - U+007A</li>
      <li>[ʃ] - U+0283</li>
      <li>[ʒ] - U+0292</li>
      <li>[h] - U+0068</li>
      <li>[m] - U+006D</li>
      <li>[n] - U+006E</li>
      <li>[ŋ] - U+014B</li>
      <li>[l] - U+006C</li>
      <li>[r] - U+0072</li>
      <li>[j] - U+006A</li>
      <li>[w] - U+0077</li>
    </ul>
  </li>
  <li><strong>调音符号（Suprasegmental Symbols）:</strong>
    <ul>
      <li>[ˈ] - U+02C8 (Primary Stress)</li>
      <li>[ˌ] - U+02CC (Secondary Stress)</li>
      <li>[ː] - U+02D0 (Length Mark)</li>
      <li>[ˑ] - U+02D1 (Half-Length Mark)</li>
    </ul>
  </li>
</ol>]]></content><author><name></name></author><category term="pronunciation" /><summary type="html"><![CDATA[元音]]></summary></entry><entry><title type="html">Simple</title><link href="https://wsttask.github.io/2024/02/14/simple.html" rel="alternate" type="text/html" title="Simple" /><published>2024-02-14T20:06:25+08:00</published><updated>2024-02-14T20:06:25+08:00</updated><id>https://wsttask.github.io/2024/02/14/simple</id><content type="html" xml:base="https://wsttask.github.io/2024/02/14/simple.html"><![CDATA[<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">cn.edu.nwpu.soft</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.alibaba.fastjson2.JSON</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.alibaba.fastjson2.JSONArray</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.alibaba.fastjson2.JSONObject</span><span class="o">;</span>
<span class="c1">//import jdk.nashorn.internal.parser.JSONParser;</span>
<span class="kn">import</span> <span class="nn">org.dom4j.Document</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.dom4j.DocumentException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.dom4j.DocumentHelper</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.dom4j.Element</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">org.dom4j.io.SAXReader</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.io.*</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.text.ParseException</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.text.SimpleDateFormat</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Date</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.*</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Student</span> <span class="o">{</span>

    <span class="kd">private</span> <span class="kd">static</span> <span class="nc">BufferedReader</span> <span class="n">stdIn</span> <span class="o">=</span>
            <span class="k">new</span>  <span class="nf">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">InputStreamReader</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">in</span><span class="o">));</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="nc">PrintWriter</span> <span class="n">stdOut</span> <span class="o">=</span>
            <span class="k">new</span>  <span class="nf">PrintWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="nc">PrintWriter</span>  <span class="n">stdErr</span> <span class="o">=</span>
            <span class="k">new</span>  <span class="nf">PrintWriter</span><span class="o">(</span><span class="nc">System</span><span class="o">.</span><span class="na">err</span><span class="o">,</span> <span class="kc">true</span><span class="o">);</span>
    
    <span class="kd">private</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">UndergraduateStudent</span><span class="o">&gt;</span> <span class="n">undergraduateStudents</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">UndergraduateStudent</span><span class="o">&gt;();</span>
    <span class="kd">private</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">GraduateStudent</span><span class="o">&gt;</span> <span class="n">graduateStudents</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">GraduateStudent</span><span class="o">&gt;();</span>
    <span class="kd">private</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">DoctoralStudent</span><span class="o">&gt;</span> <span class="n">doctoralStudents</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">DoctoralStudent</span><span class="o">&gt;();</span>


    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="kd">throws</span> <span class="nc">IOException</span><span class="o">,</span> <span class="nc">ParseException</span><span class="o">{</span>
        <span class="nc">Student</span> <span class="n">student</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Student</span><span class="o">();</span>
        <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Please enter characters to implement the function\n"</span><span class="o">+</span>
                <span class="s">"[A]打印全部学生信息\n"</span> <span class="o">+</span>
                <span class="s">"[B]新增一个本科生\n"</span> <span class="o">+</span>
                <span class="s">"[C]新增一个研究生\n"</span> <span class="o">+</span>
                <span class="s">"[D]新增一个博士生\n"</span> <span class="o">+</span>
                <span class="s">"[E]按学号查找学生\n"</span> <span class="o">+</span>
                <span class="s">"[F]按姓名查找学生\n"</span> <span class="o">+</span>
                <span class="s">"[G]学生排序"</span><span class="o">);</span>
        <span class="n">student</span><span class="o">.</span><span class="na">readUS</span><span class="o">();</span>
        <span class="n">student</span><span class="o">.</span><span class="na">readGS</span><span class="o">();</span>
        <span class="n">student</span><span class="o">.</span><span class="na">readDS</span><span class="o">();</span>
        <span class="n">student</span><span class="o">.</span><span class="na">run</span><span class="o">();</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">displayInfo</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="nc">BufferedReader</span> <span class="n">br1</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">FileReader</span><span class="o">(</span><span class="s">"us.txt"</span><span class="o">));</span>
        <span class="nc">BufferedReader</span> <span class="n">br2</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">FileReader</span><span class="o">(</span><span class="s">"gs.json"</span><span class="o">));</span>
        <span class="nc">BufferedReader</span> <span class="n">br3</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="nc">FileReader</span><span class="o">(</span><span class="s">"ds.xml"</span><span class="o">));</span>
        <span class="nc">String</span> <span class="n">str1</span><span class="o">;</span>
        <span class="k">while</span><span class="o">((</span><span class="n">str1</span> <span class="o">=</span> <span class="n">br1</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">){</span>
            <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">str1</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="nc">String</span> <span class="n">str2</span><span class="o">;</span>
        <span class="k">while</span><span class="o">((</span><span class="n">str2</span> <span class="o">=</span> <span class="n">br2</span><span class="o">.</span><span class="na">readLine</span><span class="o">())!=</span> <span class="kc">null</span><span class="o">){</span>
            <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">str2</span><span class="o">);</span>
        <span class="o">}</span>
        <span class="nc">String</span> <span class="n">str3</span><span class="o">;</span>
        <span class="k">while</span><span class="o">((</span><span class="n">str3</span> <span class="o">=</span> <span class="n">br3</span><span class="o">.</span><span class="na">readLine</span><span class="o">())!=</span> <span class="kc">null</span><span class="o">){</span>
            <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">str3</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
    
    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">IOException</span><span class="o">{</span>
        <span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="n">stdIn</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
        <span class="k">while</span><span class="o">(</span><span class="n">str</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span>
        <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="s">"A"</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">str</span><span class="o">))</span>
            <span class="o">{</span>
                <span class="n">displayInfo</span><span class="o">();</span>
            <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="s">"B"</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">str</span><span class="o">))</span>
            <span class="o">{</span>
                <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"请输入学生信息，中间用_分隔"</span><span class="o">);</span>
                <span class="n">addUndergraduateStudent</span><span class="o">();</span>
            <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="s">"C"</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">str</span><span class="o">))</span>
            <span class="o">{</span>
                <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"请输入学生信息，中间用_分隔"</span><span class="o">);</span>
                <span class="n">addGraduateStudent</span><span class="o">();</span>
            <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="s">"D"</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">str</span><span class="o">))</span> <span class="o">{</span>
                <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"请输入学生信息，中间用_分隔"</span><span class="o">);</span>
                <span class="n">addDoctoralStudent</span><span class="o">();</span>
            <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="s">"E"</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">str</span><span class="o">))</span> <span class="o">{</span>
                <span class="nc">String</span> <span class="n">number</span> <span class="o">=</span> <span class="n">stdIn</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
                <span class="n">findStudentByNumber</span><span class="o">(</span><span class="n">number</span><span class="o">);</span>
            <span class="o">}</span><span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="s">"F"</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">str</span><span class="o">))</span>
            <span class="o">{</span>
                <span class="nc">String</span> <span class="n">name</span> <span class="o">=</span> <span class="n">stdIn</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
                <span class="n">findStudentByName</span><span class="o">(</span><span class="n">name</span><span class="o">);</span>
            <span class="o">}</span> <span class="k">else</span> <span class="k">if</span> <span class="o">(</span><span class="s">"G"</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">str</span><span class="o">))</span> <span class="o">{</span>
                <span class="n">sort</span><span class="o">();</span>
            <span class="o">}</span><span class="k">else</span> <span class="o">{</span>
                <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"输入不合法，请重新输入"</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="n">str</span> <span class="o">=</span> <span class="n">stdIn</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
        <span class="o">}</span>
    
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">readUS</span><span class="o">(){</span>
        <span class="k">try</span><span class="o">{</span>
            <span class="nc">FileReader</span> <span class="n">readFile</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">FileReader</span><span class="o">(</span><span class="s">"us.txt"</span><span class="o">);</span>
            <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="n">readFile</span><span class="o">);</span>
            <span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
            <span class="k">while</span><span class="o">(</span><span class="n">str</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
                <span class="nc">StringTokenizer</span> <span class="n">tokenizer</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">str</span><span class="o">,</span><span class="s">"_"</span><span class="o">);</span>
                <span class="nc">String</span> <span class="n">studentNumber</span> <span class="o">=</span> <span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
                <span class="nc">String</span> <span class="n">studentName</span> <span class="o">=</span> <span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
                <span class="nc">String</span> <span class="n">g</span> <span class="o">=</span> <span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
                <span class="kt">char</span> <span class="n">gander</span><span class="o">;</span>
                <span class="k">if</span><span class="o">(</span><span class="s">"男"</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">g</span><span class="o">))</span>
                <span class="o">{</span>
                    <span class="n">gander</span><span class="o">=</span><span class="sc">'男'</span><span class="o">;</span>
                <span class="o">}</span><span class="k">else</span><span class="o">{</span>
    
                    <span class="n">gander</span><span class="o">=</span><span class="sc">'女'</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="nc">SimpleDateFormat</span> <span class="n">formatter</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SimpleDateFormat</span><span class="o">(</span><span class="s">"yyyy年MM月dd日"</span><span class="o">);</span>
                <span class="nc">Date</span> <span class="n">birthday</span> <span class="o">=</span> <span class="n">formatter</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
                <span class="nc">String</span> <span class="n">academy</span> <span class="o">=</span> <span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
                <span class="nc">String</span> <span class="n">major</span> <span class="o">=</span> <span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
                <span class="nc">String</span> <span class="n">tutor</span> <span class="o">=</span> <span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
                <span class="n">undergraduateStudents</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">UndergraduateStudent</span><span class="o">(</span><span class="n">studentNumber</span><span class="o">,</span> <span class="n">studentName</span><span class="o">,</span> <span class="n">gander</span><span class="o">,</span> <span class="n">birthday</span><span class="o">,</span> <span class="n">academy</span><span class="o">,</span> <span class="n">major</span><span class="o">,</span><span class="n">tutor</span><span class="o">));</span>
                <span class="n">str</span><span class="o">=</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
            <span class="o">}</span>
        <span class="o">}</span><span class="k">catch</span> <span class="o">(</span><span class="nc">IOException</span> <span class="o">|</span> <span class="nc">ParseException</span> <span class="n">e</span><span class="o">){</span>
            <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"US Read exception!"</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>


    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">addUndergraduateStudent</span><span class="o">(){</span>
        <span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">try</span><span class="o">{</span>
                <span class="nc">String</span> <span class="n">s</span><span class="o">=</span> <span class="n">stdIn</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
                <span class="nc">StringTokenizer</span> <span class="n">tokenizer</span><span class="o">=</span><span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">s</span><span class="o">,</span><span class="s">"_"</span><span class="o">);</span>
                <span class="k">if</span><span class="o">(</span><span class="n">tokenizer</span><span class="o">.</span><span class="na">countTokens</span><span class="o">()!=</span><span class="mi">7</span><span class="o">)</span>
                <span class="o">{</span>
                    <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"The input information parameter is incorrect, please re-enter it"</span><span class="o">);</span>
                    <span class="k">continue</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="nc">String</span> <span class="n">studentNumber</span><span class="o">=</span><span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
                <span class="nc">String</span> <span class="n">studentName</span><span class="o">=</span><span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
                <span class="nc">String</span> <span class="n">g</span><span class="o">=</span><span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
                <span class="kt">char</span> <span class="n">gander</span><span class="o">;</span>
                <span class="k">if</span><span class="o">(</span><span class="s">"男"</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">g</span><span class="o">))</span>
                <span class="o">{</span>
    
                    <span class="n">gander</span><span class="o">=</span><span class="sc">'男'</span><span class="o">;</span>
                <span class="o">}</span><span class="k">else</span><span class="o">{</span>
    
                    <span class="n">gander</span><span class="o">=</span><span class="sc">'女'</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="nc">SimpleDateFormat</span> <span class="n">formatter</span><span class="o">=</span><span class="k">new</span> <span class="nc">SimpleDateFormat</span><span class="o">(</span><span class="s">"yyyy年MM月dd日"</span><span class="o">);</span>
                <span class="nc">Date</span> <span class="n">birthday</span><span class="o">=</span><span class="n">formatter</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
                <span class="nc">String</span> <span class="n">academy</span><span class="o">=</span><span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
                <span class="nc">String</span> <span class="n">major</span><span class="o">=</span><span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
                <span class="nc">String</span> <span class="n">tutor</span><span class="o">=</span><span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
                <span class="nc">UndergraduateStudent</span> <span class="n">undergraduateStudent</span><span class="o">=</span><span class="k">new</span> <span class="nc">UndergraduateStudent</span><span class="o">(</span><span class="n">studentNumber</span><span class="o">,</span> <span class="n">studentName</span><span class="o">,</span> <span class="n">gander</span><span class="o">,</span> <span class="n">birthday</span><span class="o">,</span> <span class="n">academy</span><span class="o">,</span> <span class="n">major</span><span class="o">,</span><span class="n">tutor</span><span class="o">);</span>
                <span class="nc">FileWriter</span> <span class="n">fileWriter</span><span class="o">=</span><span class="k">new</span> <span class="nc">FileWriter</span><span class="o">(</span><span class="s">"us.txt"</span><span class="o">,</span><span class="kc">true</span><span class="o">);</span>
                <span class="n">fileWriter</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="s">"\n"</span><span class="o">+</span><span class="n">s</span><span class="o">);</span>
                <span class="n">fileWriter</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
                <span class="n">undergraduateStudents</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">undergraduateStudent</span><span class="o">);</span>
                <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Added successfully"</span><span class="o">);</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span><span class="k">catch</span> <span class="o">(</span><span class="nc">ParseException</span> <span class="o">|</span> <span class="nc">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"The input format is incorrect, please re-enter"</span><span class="o">);</span>
            <span class="o">}</span>
    
        <span class="o">}</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">readGS</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">IOException</span><span class="o">,</span> <span class="nc">ParseException</span> <span class="o">{</span>
        <span class="k">try</span><span class="o">{</span>
            <span class="nc">FileReader</span> <span class="n">readFile</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">FileReader</span><span class="o">(</span><span class="s">"gs.json"</span><span class="o">);</span>
            <span class="nc">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">BufferedReader</span><span class="o">(</span><span class="n">readFile</span><span class="o">);</span>
            <span class="nc">String</span> <span class="n">str</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
            <span class="nc">StringBuilder</span> <span class="n">sb</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">(</span><span class="k">new</span> <span class="nc">String</span><span class="o">());</span>
            <span class="k">while</span><span class="o">(</span><span class="n">str</span><span class="o">!=</span><span class="kc">null</span><span class="o">){</span>
                <span class="n">sb</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
                <span class="n">str</span><span class="o">=</span><span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
            <span class="o">}</span>
            <span class="nc">JSONArray</span> <span class="n">array</span><span class="o">=</span><span class="nc">JSONArray</span><span class="o">.</span><span class="na">parseArray</span><span class="o">(</span><span class="n">sb</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">array</span><span class="o">.</span><span class="na">size</span><span class="o">();</span><span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
                <span class="nc">JSONObject</span> <span class="n">jsonObject</span> <span class="o">=</span> <span class="n">array</span><span class="o">.</span><span class="na">getJSONObject</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
                <span class="nc">String</span> <span class="n">studentNumber</span> <span class="o">=</span> <span class="n">jsonObject</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"studentNumber"</span><span class="o">);</span>
                <span class="nc">String</span> <span class="n">studentName</span> <span class="o">=</span> <span class="n">jsonObject</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"studentName"</span><span class="o">);</span>
                <span class="nc">String</span> <span class="n">g</span> <span class="o">=</span> <span class="n">jsonObject</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"gander"</span><span class="o">);</span>
                <span class="kt">char</span> <span class="n">gander</span><span class="o">;</span>
                <span class="k">if</span><span class="o">(</span><span class="s">"男"</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">g</span><span class="o">))</span> <span class="o">{</span>
                    <span class="n">gander</span><span class="o">=</span><span class="sc">'男'</span><span class="o">;</span>
                <span class="o">}</span><span class="k">else</span><span class="o">{</span>
                    <span class="n">gander</span><span class="o">=</span><span class="sc">'女'</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="nc">SimpleDateFormat</span> <span class="n">formatter</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SimpleDateFormat</span><span class="o">(</span><span class="s">"yyyy年MM月dd日"</span><span class="o">);</span>
                <span class="nc">Date</span> <span class="n">birthday</span> <span class="o">=</span> <span class="n">formatter</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">jsonObject</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"birthday"</span><span class="o">));</span>
                <span class="nc">String</span> <span class="n">academy</span> <span class="o">=</span> <span class="n">jsonObject</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"academy"</span><span class="o">);</span>
                <span class="nc">String</span> <span class="n">major</span> <span class="o">=</span> <span class="n">jsonObject</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"major"</span><span class="o">);</span>
                <span class="nc">String</span> <span class="n">supervisor</span> <span class="o">=</span> <span class="n">jsonObject</span><span class="o">.</span><span class="na">getString</span><span class="o">(</span><span class="s">"supervisor"</span><span class="o">);</span>
                <span class="n">graduateStudents</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">GraduateStudent</span><span class="o">(</span><span class="n">studentNumber</span><span class="o">,</span><span class="n">studentName</span><span class="o">,</span><span class="n">gander</span><span class="o">,</span><span class="n">birthday</span><span class="o">,</span><span class="n">academy</span><span class="o">,</span><span class="n">major</span><span class="o">,</span><span class="n">supervisor</span><span class="o">));</span>
            <span class="o">}</span>
        <span class="o">}</span><span class="k">catch</span> <span class="o">(</span><span class="nc">IOException</span> <span class="o">|</span> <span class="nc">ParseException</span> <span class="n">e</span><span class="o">){</span>
            <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"GS Read exception"</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">addGraduateStudent</span><span class="o">(){</span>
        <span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">){</span>
            <span class="k">try</span><span class="o">{</span>
                <span class="nc">String</span> <span class="n">s</span> <span class="o">=</span> <span class="n">stdIn</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
                <span class="nc">StringTokenizer</span> <span class="n">tokenizer</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">s</span><span class="o">,</span><span class="s">"_"</span><span class="o">);</span>
                <span class="k">if</span><span class="o">(</span><span class="n">tokenizer</span><span class="o">.</span><span class="na">countTokens</span><span class="o">()</span> <span class="o">!=</span> <span class="mi">7</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"The input information parameter is incorrect, please re-enter it"</span><span class="o">);</span>
                    <span class="k">continue</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="nc">String</span> <span class="n">studentNumber</span> <span class="o">=</span> <span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
                <span class="nc">String</span> <span class="n">studentName</span> <span class="o">=</span> <span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
                <span class="nc">String</span> <span class="n">g</span> <span class="o">=</span> <span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
                <span class="kt">char</span> <span class="n">gander</span><span class="o">;</span>
                <span class="k">if</span><span class="o">(</span><span class="s">"男"</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">g</span><span class="o">))</span> <span class="o">{</span>
                    <span class="n">gander</span><span class="o">=</span><span class="sc">'男'</span><span class="o">;</span>
                <span class="o">}</span><span class="k">else</span><span class="o">{</span>
                    <span class="n">gander</span><span class="o">=</span><span class="sc">'女'</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="nc">SimpleDateFormat</span> <span class="n">formatter</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SimpleDateFormat</span><span class="o">(</span><span class="s">"yyyy年MM月dd日"</span><span class="o">);</span>
                <span class="nc">Date</span> <span class="n">birthday</span> <span class="o">=</span> <span class="n">formatter</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
                <span class="nc">String</span> <span class="n">academy</span> <span class="o">=</span> <span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
                <span class="nc">String</span> <span class="n">major</span> <span class="o">=</span> <span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
                <span class="nc">String</span> <span class="n">supervisor</span> <span class="o">=</span> <span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
                <span class="nc">GraduateStudent</span> <span class="n">graduateStudent</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">GraduateStudent</span><span class="o">(</span><span class="n">studentNumber</span><span class="o">,</span> <span class="n">studentName</span><span class="o">,</span> <span class="n">gander</span><span class="o">,</span> <span class="n">birthday</span><span class="o">,</span>
                        <span class="n">academy</span><span class="o">,</span> <span class="n">major</span><span class="o">,</span><span class="n">supervisor</span><span class="o">);</span>
                <span class="n">graduateStudents</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">graduateStudent</span><span class="o">);</span>
                <span class="nc">FileWriter</span> <span class="n">fileWriter</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">FileWriter</span><span class="o">(</span><span class="s">"gs.json"</span><span class="o">,</span><span class="kc">false</span><span class="o">);</span>
                <span class="n">fileWriter</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="nc">JSONArray</span><span class="o">.</span><span class="na">toJSONString</span><span class="o">(</span><span class="n">graduateStudents</span><span class="o">));</span>
                <span class="n">fileWriter</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
                <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Added successfully"</span><span class="o">);</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span><span class="k">catch</span> <span class="o">(</span><span class="nc">ParseException</span> <span class="o">|</span> <span class="nc">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"The input format is incorrect, please re-enter"</span><span class="o">);</span>
            <span class="o">}</span>
    
        <span class="o">}</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">readDS</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">IOException</span> <span class="o">{</span>
        <span class="k">try</span><span class="o">{</span>
            <span class="nc">SAXReader</span> <span class="n">reader</span> <span class="o">=</span>  <span class="k">new</span> <span class="nc">SAXReader</span><span class="o">();</span>
            <span class="n">org</span><span class="o">.</span><span class="na">dom4j</span><span class="o">.</span><span class="na">Document</span> <span class="n">doc</span> <span class="o">=</span> <span class="n">reader</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="k">new</span> <span class="nc">File</span><span class="o">(</span><span class="s">"ds.xml"</span><span class="o">));</span>
            <span class="nc">Element</span> <span class="n">root</span> <span class="o">=</span> <span class="n">doc</span><span class="o">.</span><span class="na">getRootElement</span><span class="o">();</span>
            <span class="nc">List</span><span class="o">&lt;</span><span class="nc">Element</span><span class="o">&gt;</span> <span class="n">list</span> <span class="o">=</span> <span class="n">root</span><span class="o">.</span><span class="na">elements</span><span class="o">();</span>
            <span class="nc">List</span><span class="o">&lt;</span><span class="nc">DoctoralStudent</span><span class="o">&gt;</span> <span class="n">dsList</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;</span><span class="nc">DoctoralStudent</span><span class="o">&gt;();</span>
            <span class="k">for</span><span class="o">(</span><span class="nc">Element</span> <span class="nl">ds:</span><span class="n">list</span><span class="o">)</span> <span class="o">{</span>
                <span class="nc">Element</span> <span class="n">numberEle</span> <span class="o">=</span> <span class="n">ds</span><span class="o">.</span><span class="na">element</span><span class="o">(</span><span class="s">"studentNumber"</span><span class="o">);</span>
                <span class="nc">String</span> <span class="n">studentNumber</span> <span class="o">=</span> <span class="n">numberEle</span><span class="o">.</span><span class="na">getText</span><span class="o">();</span>
                <span class="nc">Element</span> <span class="n">nameEle</span> <span class="o">=</span> <span class="n">ds</span><span class="o">.</span><span class="na">element</span><span class="o">(</span><span class="s">"studentName"</span><span class="o">);</span>
                <span class="nc">String</span> <span class="n">studentName</span> <span class="o">=</span> <span class="n">nameEle</span><span class="o">.</span><span class="na">getText</span><span class="o">();</span>
                <span class="nc">Element</span> <span class="n">ganderEle</span> <span class="o">=</span> <span class="n">ds</span><span class="o">.</span><span class="na">element</span><span class="o">(</span><span class="s">"gander"</span><span class="o">);</span>
                <span class="nc">String</span> <span class="n">g</span> <span class="o">=</span> <span class="n">ganderEle</span><span class="o">.</span><span class="na">getText</span><span class="o">();</span>
                <span class="kt">char</span> <span class="n">gander</span><span class="o">;</span>
                <span class="k">if</span><span class="o">(</span><span class="s">"男"</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">g</span><span class="o">))</span> <span class="o">{</span>
                    <span class="n">gander</span><span class="o">=</span><span class="sc">'男'</span><span class="o">;</span>
                <span class="o">}</span><span class="k">else</span><span class="o">{</span>
                    <span class="n">gander</span><span class="o">=</span><span class="sc">'女'</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="nc">Element</span> <span class="n">dateEle</span> <span class="o">=</span> <span class="n">ds</span><span class="o">.</span><span class="na">element</span><span class="o">(</span><span class="s">"birthday"</span><span class="o">);</span>
                <span class="nc">String</span> <span class="n">date</span> <span class="o">=</span> <span class="n">dateEle</span><span class="o">.</span><span class="na">getText</span><span class="o">();</span>
                <span class="nc">SimpleDateFormat</span> <span class="n">formatter</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SimpleDateFormat</span><span class="o">(</span><span class="s">"yyyy年MM月dd日"</span><span class="o">);</span>
                <span class="nc">Date</span> <span class="n">birthday</span> <span class="o">=</span> <span class="n">formatter</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">date</span><span class="o">);</span>
                <span class="nc">Element</span> <span class="n">academyEle</span> <span class="o">=</span> <span class="n">ds</span><span class="o">.</span><span class="na">element</span><span class="o">(</span><span class="s">"academy"</span><span class="o">);</span>
                <span class="nc">String</span> <span class="n">academy</span> <span class="o">=</span> <span class="n">academyEle</span><span class="o">.</span><span class="na">getText</span><span class="o">();</span>
                <span class="nc">Element</span> <span class="n">majorEle</span> <span class="o">=</span> <span class="n">ds</span><span class="o">.</span><span class="na">element</span><span class="o">(</span><span class="s">"major"</span><span class="o">);</span>
                <span class="nc">String</span> <span class="n">major</span> <span class="o">=</span> <span class="n">majorEle</span><span class="o">.</span><span class="na">getText</span><span class="o">();</span>
                <span class="nc">Element</span> <span class="n">supervisorEle</span> <span class="o">=</span> <span class="n">ds</span><span class="o">.</span><span class="na">element</span><span class="o">(</span><span class="s">"supervisor"</span><span class="o">);</span>
                <span class="nc">String</span> <span class="n">supervisor</span> <span class="o">=</span> <span class="n">supervisorEle</span><span class="o">.</span><span class="na">getText</span><span class="o">();</span>
                <span class="nc">Element</span> <span class="n">researchFieldsEle</span> <span class="o">=</span> <span class="n">ds</span><span class="o">.</span><span class="na">element</span><span class="o">(</span><span class="s">"researchFields"</span><span class="o">);</span>
                <span class="nc">String</span> <span class="n">researchFields</span> <span class="o">=</span> <span class="n">researchFieldsEle</span><span class="o">.</span><span class="na">getText</span><span class="o">();</span>
                <span class="n">doctoralStudents</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">DoctoralStudent</span><span class="o">(</span><span class="n">studentNumber</span><span class="o">,</span><span class="n">studentName</span><span class="o">,</span><span class="n">gander</span><span class="o">,</span><span class="n">birthday</span><span class="o">,</span><span class="n">academy</span><span class="o">,</span><span class="n">major</span><span class="o">,</span><span class="n">supervisor</span><span class="o">,</span><span class="n">researchFields</span><span class="o">));</span>
            <span class="o">}</span>
        <span class="o">}</span><span class="k">catch</span> <span class="o">(</span><span class="nc">DocumentException</span> <span class="o">|</span> <span class="nc">ParseException</span> <span class="n">e</span><span class="o">){</span>
            <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"DS Read exception"</span><span class="o">);</span>
        <span class="o">}</span>
    
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">addDoctoralStudent</span><span class="o">(){</span>
        <span class="k">while</span><span class="o">(</span><span class="kc">true</span><span class="o">){</span>
            <span class="k">try</span><span class="o">{</span>
                <span class="nc">String</span> <span class="n">s</span><span class="o">=</span> <span class="n">stdIn</span><span class="o">.</span><span class="na">readLine</span><span class="o">();</span>
                <span class="nc">StringTokenizer</span> <span class="n">tokenizer</span><span class="o">=</span><span class="k">new</span> <span class="nc">StringTokenizer</span><span class="o">(</span><span class="n">s</span><span class="o">,</span><span class="s">"_"</span><span class="o">);</span>
                <span class="k">if</span><span class="o">(</span><span class="n">tokenizer</span><span class="o">.</span><span class="na">countTokens</span><span class="o">()!=</span><span class="mi">8</span><span class="o">)</span>
                <span class="o">{</span>
                    <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"The input information parameter is incorrect, please re-enter it"</span><span class="o">);</span>
                    <span class="k">continue</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="nc">String</span> <span class="n">studentNumber</span><span class="o">=</span><span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
                <span class="nc">String</span> <span class="n">studentName</span><span class="o">=</span><span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
                <span class="nc">String</span> <span class="n">g</span><span class="o">=</span><span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
                <span class="kt">char</span> <span class="n">gander</span><span class="o">;</span>
                <span class="k">if</span><span class="o">(</span><span class="s">"男"</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">g</span><span class="o">))</span>
                <span class="o">{</span>
                    <span class="n">gander</span><span class="o">=</span><span class="sc">'男'</span><span class="o">;</span>
                <span class="o">}</span><span class="k">else</span><span class="o">{</span>
                    <span class="n">gander</span><span class="o">=</span><span class="sc">'女'</span><span class="o">;</span>
                <span class="o">}</span>
                <span class="nc">SimpleDateFormat</span> <span class="n">formatter</span><span class="o">=</span><span class="k">new</span> <span class="nc">SimpleDateFormat</span><span class="o">(</span><span class="s">"yyyy年MM月dd日"</span><span class="o">);</span>
                <span class="nc">Date</span> <span class="n">birthday</span><span class="o">=</span><span class="n">formatter</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">());</span>
                <span class="nc">String</span> <span class="n">academy</span><span class="o">=</span><span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
                <span class="nc">String</span> <span class="n">major</span><span class="o">=</span><span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
                <span class="nc">String</span> <span class="n">supervisor</span><span class="o">=</span><span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
                <span class="nc">String</span> <span class="n">researchFields</span><span class="o">=</span><span class="n">tokenizer</span><span class="o">.</span><span class="na">nextToken</span><span class="o">();</span>
                <span class="nc">DoctoralStudent</span> <span class="n">doctoralStudent</span><span class="o">=</span><span class="k">new</span> <span class="nc">DoctoralStudent</span><span class="o">(</span><span class="n">studentNumber</span><span class="o">,</span> <span class="n">studentName</span><span class="o">,</span> <span class="n">gander</span><span class="o">,</span> <span class="n">birthday</span><span class="o">,</span> <span class="n">academy</span><span class="o">,</span> <span class="n">major</span><span class="o">,</span><span class="n">supervisor</span><span class="o">,</span><span class="n">researchFields</span><span class="o">);</span>
                <span class="n">doctoralStudents</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">doctoralStudent</span><span class="o">);</span>
                <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Added successfully"</span><span class="o">);</span>
                <span class="nc">Document</span> <span class="n">document</span> <span class="o">=</span> <span class="nc">DocumentHelper</span><span class="o">.</span><span class="na">createDocument</span><span class="o">();</span>
                <span class="nc">Element</span> <span class="n">root</span> <span class="o">=</span> <span class="n">document</span><span class="o">.</span><span class="na">addElement</span><span class="o">(</span><span class="s">"doctoralStudents"</span><span class="o">);</span>
                <span class="k">for</span><span class="o">(</span><span class="nc">DoctoralStudent</span> <span class="n">ds</span> <span class="o">:</span> <span class="n">doctoralStudents</span><span class="o">){</span>
                    <span class="nc">Element</span> <span class="n">root1</span> <span class="o">=</span> <span class="n">root</span><span class="o">.</span><span class="na">addElement</span><span class="o">(</span><span class="s">"studentInfo"</span><span class="o">);</span>
                    <span class="n">root1</span><span class="o">.</span><span class="na">addElement</span><span class="o">(</span><span class="s">"studentNumber"</span><span class="o">).</span><span class="na">addText</span><span class="o">(</span><span class="n">ds</span><span class="o">.</span><span class="na">getStudentNumber</span><span class="o">());</span>
                    <span class="n">root1</span><span class="o">.</span><span class="na">addElement</span><span class="o">(</span><span class="s">"studentName"</span><span class="o">).</span><span class="na">addText</span><span class="o">(</span><span class="n">ds</span><span class="o">.</span><span class="na">getStudentName</span><span class="o">());</span>
                    <span class="nc">String</span> <span class="n">string</span> <span class="o">=</span> <span class="nc">Character</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">ds</span><span class="o">.</span><span class="na">getGander</span><span class="o">());</span>
                    <span class="n">root1</span><span class="o">.</span><span class="na">addElement</span><span class="o">(</span><span class="s">"gander"</span><span class="o">).</span><span class="na">addText</span><span class="o">(</span><span class="n">string</span><span class="o">);</span>
                    <span class="nc">SimpleDateFormat</span> <span class="n">simpleDateFormat</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">SimpleDateFormat</span><span class="o">(</span><span class="s">"yyyy年MM月dd日"</span><span class="o">);</span>
                    <span class="nc">String</span> <span class="n">transformDate</span> <span class="o">=</span> <span class="n">simpleDateFormat</span><span class="o">.</span><span class="na">format</span><span class="o">(</span><span class="n">ds</span><span class="o">.</span><span class="na">getBirthday</span><span class="o">());</span>
                    <span class="n">root1</span><span class="o">.</span><span class="na">addElement</span><span class="o">(</span><span class="s">"birthday"</span><span class="o">).</span><span class="na">addText</span><span class="o">(</span><span class="n">transformDate</span><span class="o">);</span>
                    <span class="n">root1</span><span class="o">.</span><span class="na">addElement</span><span class="o">(</span><span class="s">"academy"</span><span class="o">).</span><span class="na">addText</span><span class="o">(</span><span class="n">ds</span><span class="o">.</span><span class="na">getAcademy</span><span class="o">());</span>
                    <span class="n">root1</span><span class="o">.</span><span class="na">addElement</span><span class="o">(</span><span class="s">"major"</span><span class="o">).</span><span class="na">addText</span><span class="o">(</span><span class="n">ds</span><span class="o">.</span><span class="na">getMajor</span><span class="o">());</span>
                    <span class="n">root1</span><span class="o">.</span><span class="na">addElement</span><span class="o">(</span><span class="s">"supervisor"</span><span class="o">).</span><span class="na">addText</span><span class="o">(</span><span class="n">ds</span><span class="o">.</span><span class="na">getSupervisor</span><span class="o">());</span>
                    <span class="n">root1</span><span class="o">.</span><span class="na">addElement</span><span class="o">(</span><span class="s">"researchFields"</span><span class="o">).</span><span class="na">addText</span><span class="o">(</span><span class="n">ds</span><span class="o">.</span><span class="na">getResearchFields</span><span class="o">());</span>
                <span class="o">}</span>
                <span class="nc">FileWriter</span> <span class="n">out</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">FileWriter</span><span class="o">(</span><span class="s">"ds.xml"</span><span class="o">,</span><span class="kc">false</span><span class="o">);</span>
                <span class="n">document</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">out</span><span class="o">);</span>
                <span class="n">out</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span><span class="k">catch</span> <span class="o">(</span><span class="nc">ParseException</span> <span class="o">|</span> <span class="nc">IOException</span> <span class="n">nfe</span><span class="o">)</span> <span class="o">{</span>
                <span class="n">nfe</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
                <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"The input format is incorrect, please re-enter"</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">findStudentByNumber</span><span class="o">(</span><span class="nc">String</span> <span class="n">number</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">for</span><span class="o">(</span><span class="nc">UndergraduateStudent</span> <span class="nl">undergraduateStudent:</span><span class="n">undergraduateStudents</span><span class="o">)</span>
        <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">number</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">undergraduateStudent</span><span class="o">.</span><span class="na">getStudentNumber</span><span class="o">()))</span>
            <span class="o">{</span>
                <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">undergraduateStudent</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">for</span><span class="o">(</span><span class="nc">GraduateStudent</span> <span class="nl">graduateStudent:</span><span class="n">graduateStudents</span><span class="o">)</span>
        <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">number</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">graduateStudent</span><span class="o">.</span><span class="na">getStudentNumber</span><span class="o">()))</span>
            <span class="o">{</span>
                <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">graduateStudent</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">for</span><span class="o">(</span><span class="nc">DoctoralStudent</span> <span class="nl">doctoralStudent:</span><span class="n">doctoralStudents</span><span class="o">)</span>
        <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">number</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">doctoralStudent</span><span class="o">.</span><span class="na">getStudentNumber</span><span class="o">()))</span>
            <span class="o">{</span>
                <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">doctoralStudent</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
                <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">findStudentByName</span><span class="o">(</span><span class="nc">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">for</span><span class="o">(</span><span class="nc">UndergraduateStudent</span> <span class="nl">undergraduateStudent:</span><span class="n">undergraduateStudents</span><span class="o">)</span>
        <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">undergraduateStudent</span><span class="o">.</span><span class="na">getStudentName</span><span class="o">()))</span>
            <span class="o">{</span>
                <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">undergraduateStudent</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">for</span><span class="o">(</span><span class="nc">GraduateStudent</span> <span class="nl">graduateStudent:</span><span class="n">graduateStudents</span><span class="o">)</span>
        <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">graduateStudent</span><span class="o">.</span><span class="na">getStudentName</span><span class="o">()))</span>
            <span class="o">{</span>
                <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">graduateStudent</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
            <span class="o">}</span>
        <span class="o">}</span>
        <span class="k">for</span><span class="o">(</span><span class="nc">DoctoralStudent</span> <span class="nl">doctoralStudent:</span><span class="n">doctoralStudents</span><span class="o">)</span>
        <span class="o">{</span>
            <span class="k">if</span><span class="o">(</span><span class="n">name</span><span class="o">.</span><span class="na">equals</span><span class="o">(</span><span class="n">doctoralStudent</span><span class="o">.</span><span class="na">getStudentName</span><span class="o">()))</span>
            <span class="o">{</span>
                <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">doctoralStudent</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
    
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">sort</span><span class="o">()</span>
    <span class="o">{</span>
        <span class="nc">Collections</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">undergraduateStudents</span><span class="o">);</span>
        <span class="nc">Collections</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">graduateStudents</span><span class="o">);</span>
        <span class="nc">Collections</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">doctoralStudents</span><span class="o">);</span>
        <span class="k">for</span><span class="o">(</span><span class="nc">UndergraduateStudent</span> <span class="nl">undergraduateStudent:</span><span class="n">undergraduateStudents</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">undergraduateStudent</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
        <span class="o">}</span>
        <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="nc">JSONArray</span><span class="o">.</span><span class="na">toJSONString</span><span class="o">(</span><span class="n">graduateStudents</span><span class="o">));</span>
        <span class="k">for</span><span class="o">(</span><span class="nc">DoctoralStudent</span> <span class="n">doctoralStudent</span> <span class="o">:</span> <span class="n">doctoralStudents</span><span class="o">){</span>
            <span class="n">stdOut</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">doctoralStudent</span><span class="o">.</span><span class="na">toString</span><span class="o">());</span>
        <span class="o">}</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>]]></content><author><name></name></author><summary type="html"><![CDATA[```java package cn.edu.nwpu.soft;]]></summary></entry><entry><title type="html">名词解释</title><link href="https://wsttask.github.io/operatingsystem/2024/02/14/%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A.html" rel="alternate" type="text/html" title="名词解释" /><published>2024-02-14T20:04:46+08:00</published><updated>2024-02-14T20:04:46+08:00</updated><id>https://wsttask.github.io/operatingsystem/2024/02/14/%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A</id><content type="html" xml:base="https://wsttask.github.io/operatingsystem/2024/02/14/%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A.html"><![CDATA[<ul>
  <li>
    <p>进程：进程是进程实体的运行过程，它是系统进行资源分配和调度的一个独立单位。</p>
  </li>
  <li>
    <p>原语：由若干条机器指令组成的，完成一种特定功能的程序段；这段程序在执行期间不允许被分割，必须一次性执行完，用来创建，撤销以及改变进程的状态</p>
  </li>
  <li>进程同步：相互协调的几个进程在某些确定点上协调它们的工作，一个进程到达了这些点后，除非 另一进程已完成了某些操作，否则就需要停下来等待这些操作的完成。</li>
  <li>进程互斥：两个或两个以上的进程由于不能同时使用同一资源，只能一个进程使用完了另一个进程才能使用的现象。</li>
  <li>临界资源：一次仅允许一个进程访问的资源。</li>
  <li>
    <p>临界区：临界段，在每个程序中，访问临界资源的那段程序。</p>
  </li>
  <li>进程通信：指进程之间可直接以较高的效率传递较多数据的信息交换方式。</li>
</ul>

<p>实时系统：</p>

<ul>
  <li>能够实现在指定或者确定的时间内完成系统功能和对外部或内部、同步或异步时间做出响应的系统</li>
  <li>在实时计算中，系统的正确性不仅仅依赖于计算的逻辑结果，而且依赖于结果产生的时间</li>
</ul>]]></content><author><name></name></author><category term="operatingSystem" /><summary type="html"><![CDATA[进程：进程是进程实体的运行过程，它是系统进行资源分配和调度的一个独立单位。]]></summary></entry><entry><title type="html">名词解释</title><link href="https://wsttask.github.io/computernetwork/2024/02/14/%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A.html" rel="alternate" type="text/html" title="名词解释" /><published>2024-02-14T20:03:58+08:00</published><updated>2024-02-14T20:03:58+08:00</updated><id>https://wsttask.github.io/computernetwork/2024/02/14/%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A</id><content type="html" xml:base="https://wsttask.github.io/computernetwork/2024/02/14/%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A.html"><![CDATA[<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>VC:virual circuit:虚电路网络
数据报:datagram network

CIDR:Classess Interdomain Routing:无类别域间路由选择

DHCP:dynamic host configuration:dong'ta

域名系统（Domain Name System ，DNS）

SMTP:(Simple mail transfer protocol):简单邮件传输协议

HTTP

POP3

IMTP

ARP:(Address Resolution Protocol)地址解析协议

</code></pre></div></div>]]></content><author><name></name></author><category term="computerNetwork" /><summary type="html"><![CDATA[``` VC:virual circuit:虚电路网络 数据报:datagram network]]></summary></entry><entry><title type="html">名词解释</title><link href="https://wsttask.github.io/compositionprinciple/2024/02/14/%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A.html" rel="alternate" type="text/html" title="名词解释" /><published>2024-02-14T20:03:05+08:00</published><updated>2024-02-14T20:03:05+08:00</updated><id>https://wsttask.github.io/compositionprinciple/2024/02/14/%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A</id><content type="html" xml:base="https://wsttask.github.io/compositionprinciple/2024/02/14/%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A.html"><![CDATA[<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>RISC:<span class="o">(</span>Reduced Instruction Set Computer<span class="o">)</span>精简指令系统计算机
CISC:<span class="o">(</span>Complex Instruction Set Computer<span class="o">)</span>复杂指令系统计算机
CPU:<span class="o">(</span>Centrol Processing Unit<span class="o">)</span>中央处理器
MAR:<span class="o">(</span>memory Address Register<span class="o">)</span>存储器地址寄存器
MDR:<span class="o">(</span>memory Data Register<span class="o">)</span>存储器数据寄存器
PC:<span class="o">(</span>process counter<span class="o">)</span>程序计数器
IR:<span class="o">(</span>Instruction Register<span class="o">)</span>指令寄存器
ALU:<span class="o">(</span>Arithmetic Logical Unit<span class="o">)</span>算数逻辑单元
微命令：控制器发出的不能够再分的控制信号，最小的命令信号
微操作：执行部件接收到微命令后进行的操作，最小的动作单元，微命令与微操作是一一对应的
微指令：微指令是若干微命令的集合。
微地址：即微指令在控制存储器CM中存放的地址。
EPROM:<span class="o">(</span>Erasable Programmable Read Only Memory<span class="o">)</span>可擦编程只读存储器
EEPROM:<span class="o">(</span>Electrically Erasable Programmable Read-Only Memory<span class="o">)</span>电可擦变成只读存储器
ID:<span class="o">(</span>instruction decoder<span class="o">)</span>指令解码器
</code></pre></div></div>]]></content><author><name></name></author><category term="compositionPrinciple" /><summary type="html"><![CDATA[RISC:(Reduced Instruction Set Computer)精简指令系统计算机 CISC:(Complex Instruction Set Computer)复杂指令系统计算机 CPU:(Centrol Processing Unit)中央处理器 MAR:(memory Address Register)存储器地址寄存器 MDR:(memory Data Register)存储器数据寄存器 PC:(process counter)程序计数器 IR:(Instruction Register)指令寄存器 ALU:(Arithmetic Logical Unit)算数逻辑单元 微命令：控制器发出的不能够再分的控制信号，最小的命令信号 微操作：执行部件接收到微命令后进行的操作，最小的动作单元，微命令与微操作是一一对应的 微指令：微指令是若干微命令的集合。 微地址：即微指令在控制存储器CM中存放的地址。 EPROM:(Erasable Programmable Read Only Memory)可擦编程只读存储器 EEPROM:(Electrically Erasable Programmable Read-Only Memory)电可擦变成只读存储器 ID:(instruction decoder)指令解码器]]></summary></entry><entry><title type="html">Backtsp</title><link href="https://wsttask.github.io/2024/02/14/BackTSP.html" rel="alternate" type="text/html" title="Backtsp" /><published>2024-02-14T19:57:51+08:00</published><updated>2024-02-14T19:57:51+08:00</updated><id>https://wsttask.github.io/2024/02/14/BackTSP</id><content type="html" xml:base="https://wsttask.github.io/2024/02/14/BackTSP.html"><![CDATA[<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>问题描述：
旅行商问题，需要走一圈再回来
</code></pre></div></div>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">Experiment2</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.Arrays</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Back_TSP</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span><span class="o">[][]</span> <span class="n">city_graph</span> <span class="o">=</span> <span class="o">{</span> 
        <span class="o">{</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">},</span>
                                        <span class="o">{</span><span class="mi">0</span><span class="o">,-</span><span class="mi">1</span><span class="o">,</span> <span class="mi">30</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">4</span><span class="o">},</span>
                                        <span class="o">{</span><span class="mi">0</span><span class="o">,</span><span class="mi">30</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">10</span><span class="o">},</span>
                                        <span class="o">{</span><span class="mi">0</span><span class="o">,</span><span class="mi">6</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="mi">20</span><span class="o">},</span>
                                        <span class="o">{</span><span class="mi">0</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">}</span> <span class="o">};</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="n">path_num</span> <span class="o">=</span> <span class="n">city_graph</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">is_in</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">path_num</span><span class="o">];</span> <span class="c1">//用来检测该节点是否已经添加到路径中</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">path</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">path_num</span><span class="o">];</span><span class="c1">//用于储存路径</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span><span class="o">[]</span> <span class="n">best_path</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">path_num</span><span class="o">];</span><span class="c1">//用于储存最优路径</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="n">best_length</span> <span class="o">=</span> <span class="nc">Integer</span><span class="o">.</span><span class="na">MAX_VALUE</span><span class="o">;</span><span class="c1">//初始化最优路径的路程总和</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="n">now_length</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>

    <span class="cm">/**
     * 注意递归返回时，全局变量并不会返回，而是保留深层递归的值，需要你手动取消
     * 递归返回跟随返回的值只有i,j,k这种局部变量,递归一次相当于重新创建了一个局部变量
     *
     * @param t 代表递归深度，递归到城市数目加一的时候结束
     */</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">TSP</span><span class="o">(</span><span class="kt">int</span> <span class="n">t</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">t</span> <span class="o">&gt;</span> <span class="n">path_num</span> <span class="o">-</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>  <span class="c1">// 搜索至叶子节点</span>
            <span class="nc">StringBuilder</span> <span class="nc">ThePath</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">();</span>

            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">path_num</span><span class="o">;</span> <span class="o">++</span><span class="n">i</span><span class="o">)</span> <span class="o">{</span>  <span class="c1">// 输出当前路径</span>
                <span class="nc">ThePath</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">path</span><span class="o">[</span><span class="n">i</span><span class="o">]).</span><span class="na">append</span><span class="o">(</span><span class="s">"-&gt;"</span><span class="o">);</span>
            <span class="o">}</span>
            <span class="c1">//temp是最后一个城市</span>
            <span class="kt">int</span> <span class="n">temp</span> <span class="o">=</span> <span class="n">path</span><span class="o">[</span><span class="n">path_num</span><span class="o">-</span><span class="mi">1</span><span class="o">];</span>

            <span class="k">if</span> <span class="o">(</span><span class="n">city_graph</span><span class="o">[</span><span class="n">temp</span><span class="o">][</span><span class="mi">1</span><span class="o">]</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// 判断是否存在回路</span>
                <span class="nc">ThePath</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="sc">'1'</span><span class="o">);</span>  <span class="c1">// 路径加上回路回到城市1</span>
                <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"当前路径:"</span> <span class="o">+</span> <span class="nc">ThePath</span><span class="o">);</span>

                <span class="kt">int</span> <span class="n">back_length</span> <span class="o">=</span> <span class="n">now_length</span> <span class="o">+</span> <span class="n">city_graph</span><span class="o">[</span><span class="n">temp</span><span class="o">][</span><span class="mi">1</span><span class="o">];</span> <span class="c1">// 回路路程也需要相加</span>
                <span class="c1">//System.out.println("当前路径总和:" + back_length);</span>

                <span class="k">if</span> <span class="o">(</span><span class="n">back_length</span> <span class="o">&lt;</span> <span class="n">best_length</span><span class="o">)</span> <span class="o">{</span> <span class="c1">// 更新最优解</span>
                    <span class="nc">System</span><span class="o">.</span><span class="na">arraycopy</span><span class="o">(</span><span class="n">path</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="n">best_path</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="n">path_num</span> <span class="o">-</span> <span class="mi">1</span><span class="o">);</span>

                    <span class="n">best_length</span> <span class="o">=</span> <span class="n">back_length</span><span class="o">;</span>
                    <span class="c1">// 更新最优路径</span>
                    <span class="c1">//System.out.println("更新最优路径");</span>
                <span class="o">}</span>
                <span class="k">return</span><span class="o">;</span>  <span class="c1">// 返回</span>
            <span class="o">}</span>
        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
            <span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">path_num</span><span class="o">;</span> <span class="o">++</span><span class="n">j</span><span class="o">)</span> <span class="o">{</span>
                <span class="c1">//图大1,可以不用对初始条件做分类讨论</span>
                <span class="k">if</span> <span class="o">(</span><span class="n">city_graph</span><span class="o">[</span><span class="n">path</span><span class="o">[</span><span class="n">t</span> <span class="o">-</span> <span class="mi">1</span><span class="o">]][</span><span class="n">j</span><span class="o">]</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="o">(</span><span class="n">is_in</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">==</span> <span class="mi">0</span><span class="o">))</span> <span class="o">{</span> <span class="c1">// 两城市间存在路径并且还未走过</span>
                    <span class="n">is_in</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span> <span class="c1">// 表示该城市已经来过</span>
                    <span class="n">path</span><span class="o">[</span><span class="n">t</span><span class="o">]</span> <span class="o">=</span> <span class="n">j</span><span class="o">;</span> <span class="c1">// 将该城市存至path中</span>
                    <span class="n">now_length</span> <span class="o">=</span> <span class="n">now_length</span> <span class="o">+</span> <span class="n">city_graph</span><span class="o">[</span><span class="n">path</span><span class="o">[</span><span class="n">t</span> <span class="o">-</span> <span class="mi">1</span><span class="o">]][</span><span class="n">j</span><span class="o">];</span> <span class="c1">// 加路径对应路程和</span>

                    <span class="c1">//剪支</span>
                    <span class="k">if</span><span class="o">(</span><span class="n">now_length</span><span class="o">&gt;</span><span class="n">best_length</span><span class="o">)</span> <span class="o">{</span>
                        <span class="c1">//此时不需要再向下搜索,不需要迭代了</span>
                        <span class="c1">//System.out.println(Arrays.toString(path));</span>
                    <span class="o">}</span>
                    <span class="k">else</span> <span class="o">{</span>
                        <span class="no">TSP</span><span class="o">(</span><span class="n">t</span> <span class="o">+</span> <span class="mi">1</span><span class="o">);</span>
                    <span class="o">}</span>
                    <span class="n">is_in</span><span class="o">[</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span><span class="c1">//递归结束,开始回退,先把城市去掉</span>
                    <span class="n">path</span><span class="o">[</span><span class="n">t</span><span class="o">]</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span><span class="c1">//把路径中的去掉</span>
                    <span class="n">now_length</span> <span class="o">=</span> <span class="n">now_length</span> <span class="o">-</span> <span class="n">city_graph</span><span class="o">[</span><span class="n">path</span><span class="o">[</span><span class="n">t</span> <span class="o">-</span> <span class="mi">1</span><span class="o">]][</span><span class="n">j</span><span class="o">];</span><span class="c1">//把路程减回去</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>

    <span class="cm">/**
     *
     * @param city_graph 这个图必须和test测试用例一样,第一行第一列均为零,即下表为0为无效点
     */</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">Back_TSP</span><span class="o">(</span><span class="kt">int</span><span class="o">[][]</span> <span class="n">city_graph</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">Back_TSP</span><span class="o">.</span><span class="na">city_graph</span> <span class="o">=</span> <span class="n">city_graph</span><span class="o">;</span>
        <span class="n">path_num</span> <span class="o">=</span> <span class="n">city_graph</span><span class="o">.</span><span class="na">length</span><span class="o">;</span>
        <span class="n">path</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">path_num</span><span class="o">];</span>
        <span class="n">best_path</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">path_num</span><span class="o">];</span>
        <span class="n">is_in</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">int</span><span class="o">[</span><span class="n">path_num</span><span class="o">];</span>
        <span class="no">TSP</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>

        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="nc">Arrays</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="n">best_path</span><span class="o">));</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">best_length</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="kt">int</span><span class="o">[][]</span> <span class="n">city_graph</span> <span class="o">=</span> <span class="o">{</span> 
            <span class="o">{</span><span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">},</span>
                			   <span class="o">{</span><span class="mi">0</span><span class="o">,-</span><span class="mi">1</span><span class="o">,</span> <span class="mi">30</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">4</span><span class="o">},</span>
                			   <span class="o">{</span><span class="mi">0</span><span class="o">,</span><span class="mi">30</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">10</span><span class="o">},</span>
                			   <span class="o">{</span><span class="mi">0</span><span class="o">,</span><span class="mi">6</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="mi">20</span><span class="o">},</span>
                			   <span class="o">{</span><span class="mi">0</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">}};</span>

        <span class="kt">int</span><span class="o">[][]</span> <span class="n">b</span> <span class="o">=</span> <span class="o">{</span> <span class="o">{</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span> <span class="o">},</span> <span class="o">{</span> <span class="mi">0</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">19</span><span class="o">,</span> <span class="mi">13</span> <span class="o">},</span> <span class="o">{</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">21</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="mi">14</span> <span class="o">},</span> <span class="o">{</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">1</span><span class="o">,</span> <span class="mi">40</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span><span class="o">,</span> <span class="mi">17</span> <span class="o">},</span>
                <span class="o">{</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">41</span><span class="o">,</span> <span class="mi">80</span><span class="o">,</span> <span class="mi">10</span><span class="o">,</span> <span class="o">-</span><span class="mi">1</span> <span class="o">}</span> <span class="o">};</span>
        <span class="n">Back_TSP</span><span class="o">(</span><span class="n">city_graph</span><span class="o">);</span>
    <span class="o">}</span>


<span class="o">}</span>

</code></pre></div></div>]]></content><author><name></name></author><summary type="html"><![CDATA[问题描述： 旅行商问题，需要走一圈再回来]]></summary></entry><entry><title type="html">公式集合</title><link href="https://wsttask.github.io/calculus/2024/02/14/README.html" rel="alternate" type="text/html" title="公式集合" /><published>2024-02-14T19:48:57+08:00</published><updated>2024-02-14T19:48:57+08:00</updated><id>https://wsttask.github.io/calculus/2024/02/14/README</id><content type="html" xml:base="https://wsttask.github.io/calculus/2024/02/14/README.html"><![CDATA[<h1 id="求导公式">求导公式</h1>

<p><img src="https://wsttask.github.io/picture/images/courses/math/calculus/1.jpg" alt="" /></p>

<h1 id="三角函数公式">三角函数公式</h1>

<p><img src="https://wsttask.github.io/picture/images/courses/math/calculus/2.jpg" alt="" /></p>

<p><img src="https://wsttask.github.io/picture/images/courses/math/calculus/3.jpg" alt="" /></p>

<h1 id="常用等价无穷小">常用等价无穷小</h1>

<p><img src="https://wsttask.github.io/picture/images/courses/math/calculus/4.jpg" alt="" /></p>

<p><img src="https://wsttask.github.io/picture/images/courses/math/calculus/5.jpg" alt="" /></p>

<p><img src="https://wsttask.github.io/picture/images/courses/math/calculus/6.jpg" alt="" /></p>

<p><a href="https://www.zhihu.com/question/20829733">(63 封私信 / 81 条消息) 如何巧记「积化和差」与「和差化积」公式？ - 知乎 (zhihu.com)</a></p>

<p>积化和差</p>

<p>正余余正，正加正减；</p>

<p>余余正正，余加负余减</p>

<p>和差化积</p>

<p>正加正，正在前；</p>

<p>正减正，余在前；</p>

<p>余加余，余并肩；</p>

<p>余减余，负正弦。</p>]]></content><author><name></name></author><category term="calculus" /><summary type="html"><![CDATA[求导公式]]></summary></entry></feed>