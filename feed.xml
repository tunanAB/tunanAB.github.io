<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://wsttask.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://wsttask.github.io/" rel="alternate" type="text/html" /><updated>2024-03-07T13:41:33+08:00</updated><id>https://wsttask.github.io/feed.xml</id><entry><title type="html">运行</title><link href="https://wsttask.github.io/2024/03/07/%E8%BF%90%E8%A1%8C.html" rel="alternate" type="text/html" title="运行" /><published>2024-03-07T13:35:05+08:00</published><updated>2024-03-07T13:35:05+08:00</updated><id>https://wsttask.github.io/2024/03/07/%E8%BF%90%E8%A1%8C</id><content type="html" xml:base="https://wsttask.github.io/2024/03/07/%E8%BF%90%E8%A1%8C.html"><![CDATA[<p>1.输入url可以直接打开该网站</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>windos+r
输入
https://fanyi.baidu.com/#en/zh/
直接打开
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>taskmgr: 打开任务管理器
ms-settings:wheel: 打开设置
</code></pre></div></div>]]></content><author><name></name></author><summary type="html"><![CDATA[1.输入url可以直接打开该网站]]></summary></entry><entry><title type="html">Windows命令行与批处理</title><link href="https://wsttask.github.io/2024/03/07/windows%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B8%8E%E6%89%B9%E5%A4%84%E7%90%86.html" rel="alternate" type="text/html" title="Windows命令行与批处理" /><published>2024-03-07T13:34:19+08:00</published><updated>2024-03-07T13:34:19+08:00</updated><id>https://wsttask.github.io/2024/03/07/windows%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B8%8E%E6%89%B9%E5%A4%84%E7%90%86</id><content type="html" xml:base="https://wsttask.github.io/2024/03/07/windows%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B8%8E%E6%89%B9%E5%A4%84%E7%90%86.html"><![CDATA[<h1 id="命令行">命令行</h1>

<h2 id="cmd与powershell">cmd与PowerShell</h2>

<p>cmd是power shell的子集。</p>

<h2 id="说明">说明</h2>

<ul>
  <li>不区分大小写</li>
  <li>按上下键可以查看历史命令</li>
  <li>Tab键可以自动补全</li>
  <li>使用<code class="language-plaintext highlighter-rouge">/?</code>或<code class="language-plaintext highlighter-rouge">/help</code>可以查看命令用法，用法中的<code class="language-plaintext highlighter-rouge">[]</code>代表可选</li>
  <li>命令基本格式<code class="language-plaintext highlighter-rouge">命令 参数列表 </code></li>
</ul>

<h2 id="基本命令">基本命令</h2>

<table>
  <thead>
    <tr>
      <th>命令</th>
      <th>功能</th>
      <th>举例</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">echo</code></td>
      <td>显示</td>
      <td> </td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">pause</code></td>
      <td>暂停</td>
      <td><code class="language-plaintext highlighter-rouge">pause &gt; nul</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">cls</code></td>
      <td>清屏</td>
      <td> </td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">exit</code></td>
      <td>退出</td>
      <td> </td>
    </tr>
  </tbody>
</table>

<h2 id="常用命令">常用命令</h2>

<table>
  <thead>
    <tr>
      <th>命令</th>
      <th>功能</th>
      <th>举例</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">type</code></td>
      <td>显示文件内容</td>
      <td><code class="language-plaintext highlighter-rouge">type 1.txt</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">find</code></td>
      <td>查找字符串</td>
      <td><code class="language-plaintext highlighter-rouge">find "abc" 2.txt</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">fc</code></td>
      <td>比较文件内容</td>
      <td><code class="language-plaintext highlighter-rouge">fc 1.txt 2.txt</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">date</code></td>
      <td>显示/修改日期</td>
      <td><code class="language-plaintext highlighter-rouge">date /T</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">time</code></td>
      <td>显示/修改时间</td>
      <td><code class="language-plaintext highlighter-rouge">time /T</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">ping</code></td>
      <td>网络连接测试</td>
      <td><code class="language-plaintext highlighter-rouge">ping www.baidu.com</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">ipconfig</code></td>
      <td>TCP/IP信息</td>
      <td> </td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">set /a</code></td>
      <td>计算表达式</td>
      <td><code class="language-plaintext highlighter-rouge">set /a 6%4</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">shutdown</code></td>
      <td>关机</td>
      <td><code class="language-plaintext highlighter-rouge">shutdown /s /t 60</code></td>
    </tr>
  </tbody>
</table>

<h3 id="多命令">多命令</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&amp;  顺序执行多条命令，不管命令是否执行成功
<span class="o">&amp;&amp;</span> 顺序执行多条命令，前面的命令错误则不执行后面的命令
<span class="o">||</span> 顺序执行多条命令，碰到执行正确的命令后将不执行后面的命令

abc &amp; <span class="nb">dir</span> &amp; bcd
abc <span class="o">&amp;&amp;</span> <span class="nb">dir</span> <span class="o">&amp;&amp;</span> bcd
abc <span class="o">||</span> <span class="nb">dir</span> <span class="o">||</span> bcd
</code></pre></div></div>

<h3 id="重定向">重定向</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span>  输出重定向
<span class="o">&gt;&gt;</span> 追加重定向
&lt;  输入重定向

<span class="nb">date</span> /t <span class="o">&gt;</span> 1.txt
<span class="nb">time</span> /t <span class="o">&gt;&gt;</span> 1.txt
find <span class="s2">"/"</span> &lt; 1.txt
</code></pre></div></div>

<h3 id="管道">管道</h3>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>| 前一个命令的输出作为后一个命令的输入

<span class="nb">dir</span> | find <span class="s2">"txt"</span>
</code></pre></div></div>

<h2 id="文件操作命令">文件操作命令</h2>

<p><strong>路径分隔符</strong>：<code class="language-plaintext highlighter-rouge">\</code></p>

<p><strong>当前目录</strong>：<code class="language-plaintext highlighter-rouge">.</code></p>

<p><strong>上一级目录</strong>：<code class="language-plaintext highlighter-rouge">..</code></p>

<table>
  <thead>
    <tr>
      <th>命令</th>
      <th>功能</th>
      <th>举例</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">dir</code></td>
      <td>显示文件夹内容</td>
      <td><code class="language-plaintext highlighter-rouge">dir /A</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">tree</code></td>
      <td>显示文件夹树形结构</td>
      <td><code class="language-plaintext highlighter-rouge">tree /F</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">盘符:</code></td>
      <td>进入指定磁盘</td>
      <td><code class="language-plaintext highlighter-rouge">c:</code> <code class="language-plaintext highlighter-rouge">d:</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">cd</code></td>
      <td>切换目录</td>
      <td><code class="language-plaintext highlighter-rouge">cd test</code> <code class="language-plaintext highlighter-rouge">cd ..</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">mkdir</code>或<code class="language-plaintext highlighter-rouge">md</code></td>
      <td>创建目录</td>
      <td><code class="language-plaintext highlighter-rouge">mkdir test</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">rmdir</code>或<code class="language-plaintext highlighter-rouge">rd</code></td>
      <td>删除目录</td>
      <td><code class="language-plaintext highlighter-rouge">rmdir test</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">del</code></td>
      <td>删除文件</td>
      <td><code class="language-plaintext highlighter-rouge">del 1.txt</code> <code class="language-plaintext highlighter-rouge">del /q/a/f *.txt</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">rename</code>或<code class="language-plaintext highlighter-rouge">ren</code></td>
      <td>重命名</td>
      <td><code class="language-plaintext highlighter-rouge">rename a.txt b.txt</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">copy</code></td>
      <td>复制文件</td>
      <td><code class="language-plaintext highlighter-rouge">copy a\1.txt b\1.txt</code></td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">move</code></td>
      <td>移动文件/重命名</td>
      <td><code class="language-plaintext highlighter-rouge">move a\1.txt 2.txt</code></td>
    </tr>
  </tbody>
</table>

<h1 id="批处理">批处理</h1>

<h2 id="基本结构">基本结构</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>@echo off        <span class="c"># 关闭回显</span>
......
pause            <span class="c"># 暂停。或 pause &gt; nul</span>
</code></pre></div></div>

<h2 id="-命令">@ 命令</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>表示不显示@后面的命令，<span class="o">(</span>在入侵过程中自然不能让对方看到你使用的命令啦<span class="o">)</span>
@ 与 <span class="nb">echo </span>off 相象，但它是加在每个命令行的最前面，表示运行时不显示这一行的命令行<span class="o">(</span>只能影响当前行<span class="o">)</span>。
Sample： @echo off <span class="o">(</span>此语句常用于开头，表示不显示所有的命令行信息，包括此句<span class="o">)</span>
Sample： @echo please <span class="nb">wait </span>a minite...
Sample： @format X: /q/u/autoset
<span class="o">(</span>format 这个命令是不可以使用/y这个参数的，可喜的是微软留了个autoset这个参数给我们，效果和/y是一样的。<span class="o">)</span>
</code></pre></div></div>

<h2 id="call-命令">Call 命令</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>语法: call <span class="o">[[</span>Drive:][Path] FileName <span class="o">[</span>BatchParameters]] <span class="o">[</span>:label <span class="o">[</span>arguments]]
参数: <span class="o">[</span>Drive:][Path] FileName 指定要调用的批处理程序的位置和名称。filename 参数必须具有 .bat 或 .cmd 扩展名。
调用另一个批处理程序，并且不终止父批处理程序。
如果不用call而直接调用别的批处理文件，那么执行完那个批处理文件后将无法返回当前文件并执行当前文件的后续命令。
call 命令接受用作调用目标的标签。如果在脚本或批处理文件外使用 Call，它将不会在命令行起作用。
Sample：call<span class="o">=</span><span class="s2">"%cd%</span><span class="se">\t</span><span class="s2">est2.bat"</span> haha kkk aaa <span class="o">(</span>调用指定目录下的 test2.bat，且输入3个参数给他<span class="o">)</span>
Sample：call test2.bat arg1 arg2 <span class="o">(</span>调用同目录下的 test2.bat，且输入2个参数给他<span class="o">)</span>
注：可以调用自身<span class="o">(</span>死循环、递归<span class="o">)</span>
</code></pre></div></div>

<h2 id="运行方式">运行方式</h2>

<ul>
  <li>双击运行</li>
  <li>在cmd中运行（可以传参）</li>
</ul>

<h2 id="变量">变量</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 设置变量</span>
<span class="nb">set </span>变量名<span class="o">=</span>变量值
<span class="nb">set</span> /a 变量名<span class="o">=</span>表达式

<span class="c"># 取消变量</span>
<span class="nb">set </span>变量名<span class="o">=</span>

<span class="c"># 打印变量</span>
<span class="nb">set </span>变量名

<span class="c"># 列出变量</span>
<span class="nb">set</span>

<span class="c"># 引用变量</span>
%变量名%

<span class="c"># 输入变量值</span>
<span class="nb">set</span> /p 变量名<span class="o">=</span>提示文字
</code></pre></div></div>

<h3 id="预定义的变量">预定义的变量</h3>

<table>
  <thead>
    <tr>
      <th>变量名</th>
      <th>值</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">%cd%</code></td>
      <td>当前目录</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">%date%</code></td>
      <td>当前日期</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">%time%</code></td>
      <td>当前时间</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">%random%</code></td>
      <td>0~32767之间的随机数</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">%path%</code></td>
      <td>环境变量</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">%errorlevel%</code></td>
      <td>上一个命令的返回值，0表示执行成功</td>
    </tr>
    <tr>
      <td><code class="language-plaintext highlighter-rouge">%0</code>、<code class="language-plaintext highlighter-rouge">%1</code>、<code class="language-plaintext highlighter-rouge">%2</code>……</td>
      <td>参数。<code class="language-plaintext highlighter-rouge">%0</code>表示命令名</td>
    </tr>
  </tbody>
</table>

<h2 id="调用">调用</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>call 可执行文件 <span class="o">[</span>参数列表]
</code></pre></div></div>

<h2 id="条件">条件</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="o">[</span>not] 条件 <span class="o">(</span>
    语句块
<span class="o">)</span> <span class="k">else</span> <span class="o">(</span>
    语句块
<span class="o">)</span>

<span class="c"># 条件：</span>
errorlevel number    <span class="c"># 上一个程序的返回值大于等于number则为true</span>
<span class="nv">string1</span><span class="o">==</span>string2    <span class="c"># 两个字符串匹配则为true</span>
exist filename        <span class="c"># 文件名存在则为true</span>
<span class="o">[</span>/I] string1 compare-op string2        <span class="c"># 比较数值或字符串</span>
    <span class="c"># /I    忽略大小写</span>
    <span class="c"># compare-op包括：</span>
    <span class="c">#    equ    等于</span>
    <span class="c">#     neq    不等于</span>
    <span class="c">#    lss    小于</span>
    <span class="c">#    leq    小于等于</span>
    <span class="c">#    gtr    大于</span>
    <span class="c">#    geq    大于等于</span>
defined variable    <span class="c"># 如果定义了该变量则为true</span>
</code></pre></div></div>

<h2 id="跳转">跳转</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>goto label        <span class="c"># 跳转到标签所在行</span>
:label            <span class="c"># 标签以冒号开头</span>
</code></pre></div></div>

<h2 id="循环">循环</h2>

<p><strong>基本语法</strong></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> %%i <span class="k">in</span> <span class="o">(</span><span class="nb">set</span><span class="o">)</span> <span class="k">do</span> <span class="o">(</span>
    语句块
<span class="o">)</span>

<span class="c"># 循环变量用 %% 指定，只能是单字母</span>
<span class="c"># set表示文件集合（也可以是空文件），元素之间以逗号或空格分隔，支持通配符</span>

<span class="k">for</span> %%i <span class="k">in</span> <span class="o">(</span>a,b,c<span class="o">)</span> <span class="k">do</span> <span class="o">(</span><span class="nb">echo</span> %%i<span class="o">)</span>
<span class="k">for</span> %%i <span class="k">in</span> <span class="o">(</span><span class="k">*</span>.<span class="k">*</span><span class="o">)</span> <span class="k">do</span> <span class="o">(</span><span class="nb">echo</span> %%i<span class="o">)</span>
</code></pre></div></div>

<p><strong>扩展语法</strong></p>

<ul>
  <li>
    <p>只遍历文件夹</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> /d %%i <span class="k">in</span> <span class="o">(</span><span class="nb">set</span><span class="o">)</span> <span class="k">do</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>遍历指定文件夹下的所有文件，不指定则表示当前目录。如果set为<code class="language-plaintext highlighter-rouge">.</code>表示枚举目录树</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> /r <span class="o">[[</span>drive:]path] %%i <span class="k">in</span> <span class="o">(</span><span class="nb">set</span><span class="o">)</span> <span class="k">do
  
for</span> /r %%i <span class="k">in</span> <span class="o">(</span><span class="k">*</span><span class="o">)</span> <span class="k">do</span> <span class="o">(</span><span class="nb">echo</span> %%i<span class="o">)</span>
<span class="k">for</span> /r d:<span class="se">\u</span>p %%i <span class="k">in</span> <span class="o">(</span>.<span class="o">)</span> <span class="k">do</span> <span class="o">(</span><span class="nb">echo</span> %%i<span class="o">)</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>遍历数字序列</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> /l %%i <span class="k">in</span> <span class="o">(</span>start,step,end<span class="o">)</span> <span class="k">do</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>遍历文件内容</p>

    <div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> /f <span class="o">[</span><span class="s2">"options"</span><span class="o">]</span> %%i <span class="k">in</span> <span class="o">(</span><span class="nb">set</span><span class="o">)</span> <span class="k">do</span>
</code></pre></div>    </div>
  </li>
</ul>

<h2 id="通配符">通配符</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>?        <span class="c"># 单个字符</span>
<span class="k">*</span>        <span class="c"># 任意字符</span>
</code></pre></div></div>

<h2 id="例子">例子</h2>

<p>按顺序为文件夹中的文件命名。</p>

<p><a href="https://blog.csdn.net/Dandelion_gong/article/details/78067501">批处理中for循环的自增自减问题_Dandelion_gong的博客-CSDN博客_bat for 自增</a></p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>@echo off
setlocal enabledelayedexpansion
<span class="nb">set </span><span class="nv">cnt</span><span class="o">=</span>0
<span class="k">for</span> %%i <span class="k">in</span> <span class="o">(</span>%1<span class="o">)</span> <span class="k">do</span> <span class="o">(</span>
    rename %%i <span class="o">!</span>cnt!.txt
    <span class="nb">set</span> /a <span class="nv">cnt</span><span class="o">=!</span>cnt! + 1
<span class="o">)</span>
pause
</code></pre></div></div>]]></content><author><name></name></author><summary type="html"><![CDATA[命令行]]></summary></entry><entry><title type="html">函数、方程、解析式等概念</title><link href="https://wsttask.github.io/calculus/2024/03/07/%E4%BB%A3%E6%95%B0%E5%BC%8F.html" rel="alternate" type="text/html" title="函数、方程、解析式等概念" /><published>2024-03-07T13:31:27+08:00</published><updated>2024-03-07T13:31:27+08:00</updated><id>https://wsttask.github.io/calculus/2024/03/07/%E4%BB%A3%E6%95%B0%E5%BC%8F</id><content type="html" xml:base="https://wsttask.github.io/calculus/2024/03/07/%E4%BB%A3%E6%95%B0%E5%BC%8F.html"><![CDATA[<p><a href="https://zhuanlan.zhihu.com/p/659316224?utm_campaign=shareopn&amp;utm_medium=social&amp;utm_oi=1233072458213298176&amp;utm_psn=1748759430060257280&amp;utm_source=wechat_session">函数、方程、解析式、参数方程、等式、代数式、多项式、解析几何</a></p>]]></content><author><name></name></author><category term="calculus" /><summary type="html"><![CDATA[函数、方程、解析式、参数方程、等式、代数式、多项式、解析几何]]></summary></entry><entry><title type="html">excerpt one</title><link href="https://wsttask.github.io/excerpt/2024/03/07/1.html" rel="alternate" type="text/html" title="excerpt one" /><published>2024-03-07T13:22:47+08:00</published><updated>2024-03-07T13:22:47+08:00</updated><id>https://wsttask.github.io/excerpt/2024/03/07/1</id><content type="html" xml:base="https://wsttask.github.io/excerpt/2024/03/07/1.html"><![CDATA[<ol>
  <li>
    <p>骑士有句老话，千里路途我只陪他一程，从此风雪艳阳我都不再过问。</p>
  </li>
  <li>
    <p>太平本是将军定，不许将军见太平。</p>
  </li>
  <li>
    <p>人生当如蜡烛一样，从头燃到尾，始终光明。</p>
  </li>
  <li>
    <p>人少，则慕父母；知好色，则慕少艾；有妻子，则慕妻子；仕则慕君，不得于君则热中。大孝终身慕父母。五十而慕者，予于大舜见之矣。</p>
  </li>
  <li>
    <p>朱泙漫学屠龙于支离益,殚千金之家,三年技成,而无所用其巧。</p>
  </li>
  <li>
    <p>我还是从前那个少年，没有一丝丝改变，时间只不过是考验，种在心中信念丝毫未减，眼前这个少年，还是最初那张脸。</p>
  </li>
  <li>
    <p>我希望躺在向日葵上，即使沮丧，也能朝着阳光。</p>
  </li>
  <li>
    <p>喜欢是很贵的，哪有那么容易消费得起，所以要存起来，只给一个人，一瓶装的草莓味的喜欢。</p>
  </li>
  <li>
    <p>我想不出来第一次看见你的时候，你穿的衣服是什么颜色，是晴天还是雨天，因为我从未想过，到那天之后我会喜欢你。</p>
  </li>
  <li>
    <p>佛曰：人生有八苦，生，老，病，死；爱别离，怨长久，求不得，放不下。</p>
  </li>
  <li>
    <p>何谓恩爱别苦？室家内外，兄弟妻子，共相恋慕，一朝破亡，为人抄劫，各自分张，父东子西，母南女北，非唯一处，为人奴婢，各自悲呼，心内断绝，窈窈冥冥，无有相见之期。”</p>
  </li>
  <li>
    <p>也许努力有些煎熬，但真的，熬过去就好了。</p>
  </li>
  <li>
    <p>想尝试一下早睡早起，规律三餐，晒半个小时太阳，日读两个小时书的生活。</p>
  </li>
  <li>
    <p>我好像抱抱你闻闻你身上的味道，把下巴搁在你的肩上，然后乖乖睡着。</p>
  </li>
  <li>
    <p>佛不要你皈依，佛要你欢喜。</p>
  </li>
  <li>
    <p>世人慌慌张张，不过图碎银几两，偏偏着碎银几两，压断了多少人的脊梁。</p>
  </li>
  <li>
    <p>剑气纵横三千里，一剑寒光十九州。</p>
  </li>
  <li>
    <p>十八年风雨，半生鸿业，说与枯骨听。</p>
  </li>
  <li>
    <p>世人多媚骨，唯有君如故。</p>
  </li>
  <li>
    <p>不快乐的时候，你会借助很多东西来暂时麻醉，放纵啊，喝酒啊，喝得醉熏熏的，甚至抱头痛哭啊，干嘛干嘛，这些东西都很虚的。这些其实都是暂时麻醉来掩盖那种声音</p>
  </li>
</ol>]]></content><author><name></name></author><category term="excerpt" /><summary type="html"><![CDATA[骑士有句老话，千里路途我只陪他一程，从此风雪艳阳我都不再过问。]]></summary></entry><entry><title type="html">python学习</title><link href="https://wsttask.github.io/python/2024/03/05/python.html" rel="alternate" type="text/html" title="python学习" /><published>2024-03-05T23:05:31+08:00</published><updated>2024-03-05T23:05:31+08:00</updated><id>https://wsttask.github.io/python/2024/03/05/python</id><content type="html" xml:base="https://wsttask.github.io/python/2024/03/05/python.html"><![CDATA[<p><a href="https://www.byhy.net/">简单的案例</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">print</span><span class="p">()</span>
<span class="o">//</span><span class="n">输出到控制台</span>
<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">我今年</span><span class="sh">"</span><span class="p">,</span><span class="n">age</span><span class="p">,</span><span class="sh">"</span><span class="s">岁了</span><span class="sh">"</span><span class="p">)</span>

<span class="nf">type</span><span class="p">(</span><span class="n">variable</span><span class="p">)</span>
<span class="c1"># 返回variable的类型信息
# literal，也可以输出字面量的类型
</span>
<span class="nf">int</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
<span class="c1"># 把x转换为一个整数
</span>
<span class="nf">float</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>

<span class="nf">str</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
<span class="c1"># str(x)可以把variable转换为字符串
# 所有变量都可转换成数字
# 字符串转换成数字必须符合其规则，int（只有数字）
</span>

<span class="nf">exit</span><span class="p">()</span>
<span class="o">//</span><span class="n">退出解释器</span>
</code></pre></div></div>

<p><img src="../images/image-20230523115300031.png" alt="image-20230523115300031" /></p>

<p>pycharm设置快捷键</p>

<p>file-&gt;setting-&gt;搜索“incre”-&gt;右击“increase font size”-&gt;add mouse shortcut-&gt;ctrl+wheel up</p>

<h5 id="注释">注释</h5>

<ol>
  <li>
    <p>单行注释</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 我是注释
</span><span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Hello World</span><span class="sh">"</span><span class="p">)</span> <span class="c1"># 我是注释
</span><span class="n">注意井号和注释内容建议一个空格隔开</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>多行注释</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="sh">"""</span><span class="s">
我是多行注释
行一
行二
</span><span class="sh">"""</span>
</code></pre></div>    </div>
  </li>
</ol>

<h5 id="注释之间的嵌套">注释之间的嵌套</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mf">1.</span><span class="n">单行注释中能否使用多行注释</span>
<span class="n">如果多行注释只占用一行</span><span class="err">，</span><span class="n">单行注释可以嵌套多行注释</span><span class="err">；</span><span class="n">若多行注释占用多行</span><span class="err">，</span><span class="n">则无法嵌套了</span><span class="err">，</span>
<span class="mf">2.</span><span class="n">多行注释中能否使用单行注释</span>
<span class="n">可以</span><span class="err">。</span><span class="n">这种情况下</span><span class="err">，</span><span class="n">无论外层的多行注释占用几行都没有问题</span><span class="err">。</span>
<span class="mf">3.</span><span class="n">多行注释中能否使用多行注释</span>
<span class="n">不可以</span><span class="err">。</span><span class="n">无论多行注释嵌套的多行注释共占据单行还是多行</span><span class="err">，</span><span class="n">都不可以成功</span><span class="err">。</span>
<span class="n">多行注释嵌套多行注释</span><span class="err">，</span><span class="n">势必为</span><span class="sh">"</span><span class="s">“”“”“注释内容”“”“”</span><span class="sh">"</span><span class="err">。</span><span class="n">计算机会将最前面的三对双引号视为多行注释</span><span class="err">，</span><span class="n">再将最后面的三对双引号视为多行注释符</span><span class="err">，</span><span class="n">这两者的注释内容都为空</span><span class="err">。</span><span class="n">而真正的注释内容却暴露在外</span><span class="err">，</span><span class="n">没有多行注释符的提示</span><span class="err">，</span><span class="n">系统无法识别</span><span class="err">，</span><span class="n">只会认为是语法错误</span><span class="err">。</span>
</code></pre></div></div>

<h5 id="变量和字面量">变量和字面量</h5>

<ol>
  <li>
    <p>变量是没有数据类型的！（有可能是指针）（而且指针可以指向任一一个数据类型</p>

    <blockquote>
      <p>这是python的一大特点</p>
    </blockquote>
  </li>
  <li>
    <p>字面量即常量</p>
  </li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">print</span><span class="p">(</span><span class="n">字面量</span><span class="p">)</span><span class="err">，</span>

<span class="n">如</span><span class="err">：</span>
<span class="nf">print</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span><span class="err">，</span><span class="n">输出整数10</span>

<span class="nf">print</span><span class="p">(</span><span class="mf">13.14</span><span class="p">)</span><span class="err">，</span><span class="n">输出浮点数13</span><span class="p">.</span><span class="mi">14</span>

<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">黑马程序员</span><span class="sh">"</span><span class="p">)</span><span class="err">，</span><span class="n">输出字符串</span><span class="err">：</span><span class="n">黑马程序员</span>
<span class="c1"># 整数与浮点数的字面量都与现实中的写法相同
# 只有字符串在程序中的写法相比较现实中的写法需要多加一个双引号“”
</span></code></pre></div></div>

<h5 id="数据类型转换">数据类型转换</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">int</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
<span class="nf">float</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
<span class="nf">str</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>

<span class="n">x</span> <span class="o">=</span> <span class="bp">True</span>
<span class="nf">int</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="o">=</span> <span class="mi">1</span>
<span class="nf">float</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="o">=</span> <span class="mf">1.0</span>

<span class="c1"># 浮点数转换为整数会丢失精度
</span></code></pre></div></div>

<h5 id="标识符">标识符</h5>

<ol>
  <li>标识符命名元素：英文、中文、数字、下划线，</li>
  <li>数字不可以开头</li>
  <li>下划线可以开头</li>
  <li>大小写敏感</li>
  <li>不可使用关键字</li>
</ol>

<h5 id="变量命名规范">变量命名规范</h5>

<ol>
  <li>见明知意</li>
  <li>下划线命名</li>
  <li>英文字符应全小写</li>
</ol>

<p>关键字</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="bp">False</span> 
<span class="bp">True</span>
<span class="bp">None</span>
<span class="c1"># 这三个关键字首字母大写
</span><span class="n">定义false</span><span class="p">,</span><span class="n">true</span><span class="p">,</span><span class="n">none不算占用关键字</span>
</code></pre></div></div>

<h5 id="算数运算符">算数运算符</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">+</span>
<span class="o">-</span>
<span class="o">*</span>
<span class="o">/</span>
<span class="c1"># 直接得到小数！
</span>
<span class="o">//</span>
<span class="c1"># 取整除
# 注意和java，c都不一样
</span>
<span class="o">%</span>
<span class="c1"># 取余
</span>
<span class="o">**</span>
<span class="c1"># 指数
# x**y:x的y次方
</span></code></pre></div></div>

<h5 id="快捷键">快捷键</h5>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pycharm
ctrl+d:复制当前一行代码
</code></pre></div></div>

<h5 id="字符串的三种定义方式">字符串的三种定义方式</h5>

<ol>
  <li>
    <p>单引号定义法：<code class="language-plaintext highlighter-rouge">name = '李华'</code></p>
  </li>
  <li>
    <p>双引号定义法：<code class="language-plaintext highlighter-rouge">name = "李华"</code></p>
  </li>
  <li>
    <p>三引号定义法：<code class="language-plaintext highlighter-rouge">name = """李华"""</code></p>

    <blockquote>
      <p>三引号定义发可以加\n</p>

      <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>name = """
李
华
"""
</code></pre></div>      </div>
    </blockquote>
  </li>
</ol>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">name</span> <span class="o">=</span> <span class="sh">'"</span><span class="s">李华</span><span class="sh">"'</span>
<span class="c1"># 在字符串中包含双引号
</span>
<span class="n">name</span> <span class="o">=</span> <span class="sh">"'</span><span class="s">李华</span><span class="sh">'"</span>
<span class="c1"># 在字符串中包含单引号
</span>
<span class="n">name</span> <span class="o">=</span> <span class="sh">'</span><span class="se">\"</span><span class="s">李华</span><span class="se">\"</span><span class="sh">'</span>
<span class="n">name</span> <span class="o">=</span> <span class="sh">"</span><span class="se">\'</span><span class="s">李华</span><span class="se">\'</span><span class="sh">"</span>
<span class="c1">#  转移zi'fu
</span></code></pre></div></div>

<h5 id="字符串拼接">字符串拼接</h5>

<ol>
  <li>
    <p>可以通过”+”进行字符串拼接</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Hello</span><span class="sh">"</span><span class="o">+</span><span class="sh">"</span><span class="s">World</span><span class="sh">"</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="n">HelloWorld</span>
<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Hello</span><span class="sh">"</span><span class="p">,</span><span class="sh">"</span><span class="s">World</span><span class="sh">"</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="n">Hello</span> <span class="n">World</span>
</code></pre></div>    </div>

    <p>缺点，不可以和数字进行拼接，只能和字符串进行拼接</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">Hello</span><span class="sh">"</span><span class="o">+</span><span class="sh">"</span><span class="s">World</span><span class="sh">"</span><span class="o">+</span><span class="mi">1000</span><span class="p">)</span>
</code></pre></div>    </div>

    <p>可以通过把数字变成字符串进行拼接</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">hello</span><span class="sh">"</span><span class="o">+</span><span class="sh">"</span><span class="s">world</span><span class="sh">"</span><span class="o">+</span><span class="sh">"</span><span class="s">1000</span><span class="sh">"</span><span class="p">)</span>
</code></pre></div>    </div>
  </li>
</ol>

<h5 id="字符串格式化">字符串格式化</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">message</span> <span class="o">=</span> <span class="sh">"</span><span class="s">我是练习时常%d年半的个人偶像练习生</span><span class="sh">"</span> <span class="o">%</span> <span class="mi">2</span>
<span class="n">message</span> <span class="o">=</span> <span class="sh">"</span><span class="s">我是练习时常%s年%s的个人偶像练习生</span><span class="sh">"</span> <span class="o">%</span> <span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mf">0.50</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="n">我是练习时常2年0</span><span class="p">.</span><span class="mi">5</span><span class="n">的个人偶像练习生</span>
<span class="n">message</span> <span class="o">=</span> <span class="sh">"</span><span class="s">我是练习时常%s年%s的个人偶像练习生</span><span class="sh">"</span> <span class="o">%</span> <span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mf">0.50</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="n">我是练习时常2年0</span><span class="p">.</span><span class="mi">500000</span><span class="n">的个人偶像练习生</span>
<span class="c1"># %s 万物皆可转换成字符串
</span>
<span class="o">%</span><span class="n">s</span><span class="p">:</span><span class="n">字符串</span>
<span class="o">%</span><span class="n">d</span><span class="p">:</span><span class="n">整数</span>
<span class="o">%</span><span class="n">f</span><span class="p">:</span><span class="n">浮点数</span>
</code></pre></div></div>

<h5 id="字符串格式化的精度控制">字符串格式化的精度控制</h5>

<pre><code class="language-pthon">%5d:将数字的宽度控制在5位，宽度不够补空格，限制宽度小于实际宽度，限制宽度不起作用
%5.2f:变送将宽度控制为5，将小数点精度设置为2，并且四舍五入（小数点也占一个宽度）
</code></pre>

<h5 id="快速字符串格式化">快速字符串格式化</h5>

<p><img src="../images/image-20230526194757322.png" alt="image-20230526194757322" /></p>

<p>快速格式化，不限制数据类型，但是也不做精度控制。</p>

<h5 id="表达式的格式化">表达式的格式化</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">1*1的结果是:%d</span><span class="sh">"</span> <span class="o">%</span> <span class="p">(</span><span class="mi">1</span><span class="o">*</span><span class="mi">1</span><span class="p">))</span>
<span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">1*1的结果是:</span><span class="si">{</span><span class="mi">1</span><span class="o">*</span><span class="mi">1</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">字符串在Python中的类型名是：%s</span><span class="sh">"</span> <span class="o">%</span> <span class="nf">type</span><span class="p">(</span><span class="sh">"</span><span class="s">字符串</span><span class="sh">"</span><span class="p">))</span>
</code></pre></div></div>

<h5 id="数据输入input语句">数据输入（input）语句</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">name</span> <span class="o">=</span> <span class="nf">input</span><span class="p">(</span><span class="sh">"</span><span class="s">请告诉我你的银行卡密码</span><span class="sh">"</span><span class="p">)</span>
<span class="c1"># 也可以手动提示，提前用print打印提示信息
</span><span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">你的银行卡密码的数据类型是：</span><span class="sh">"</span><span class="p">,</span><span class="nf">type</span><span class="p">(</span><span class="n">num</span><span class="p">))</span>
<span class="c1"># input输入的永远是字符串类型
</span></code></pre></div></div>

<h5 id="bool变量">bool变量</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span> <span class="o">=</span> <span class="bp">True</span>
<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">%s</span><span class="sh">"</span> <span class="o">%</span> <span class="n">a</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="bp">True</span>

<span class="n">a</span> <span class="o">=</span> <span class="bp">True</span>
<span class="nf">print</span><span class="p">(</span><span class="n">a</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="mi">0</span>

<span class="n">a</span> <span class="o">=</span> <span class="bp">True</span>
<span class="nf">print</span><span class="p">(</span><span class="n">a</span> <span class="o">&gt;</span> <span class="mi">3</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="bp">False</span>

<span class="n">a</span> <span class="o">=</span> <span class="bp">True</span>
<span class="nf">print</span><span class="p">(</span><span class="n">a</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">)</span>
<span class="o">&gt;</span> <span class="bp">True</span>

<span class="c1"># 布尔变量在做运算的时候是当做1和0来进行运算的
</span></code></pre></div></div>

<h5 id="if判断语句">if判断语句</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">age</span> <span class="o">=</span> <span class="mi">18</span>
<span class="c1"># 判断语句的结果，必须是布尔类型True或False
</span><span class="k">if</span> <span class="n">age</span> <span class="o">&gt;=</span> <span class="mi">18</span><span class="p">:</span>
<span class="c1"># 需要一个冒号
</span>    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">我已经成年了</span><span class="sh">"</span><span class="p">)</span>
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">我要上大学了</span><span class="sh">"</span><span class="p">)</span>
<span class="c1"># 归属于if判断的代码语句块，需要在前方填充4个空格缩进
# Python通过缩进判断代码块的归属关系
</span><span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">时间过的真快</span><span class="sh">"</span><span class="p">)</span>
</code></pre></div></div>

<h5 id="if-else语句">if-else语句</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">age</span> <span class="o">=</span> <span class="nf">int</span><span class="p">(</span><span class="nf">input</span><span class="p">(</span><span class="sh">"</span><span class="s">请输入您的年龄：</span><span class="sh">"</span><span class="p">))</span>
<span class="k">if</span> <span class="n">age</span> <span class="o">&gt;=</span> <span class="mi">18</span><span class="p">:</span>
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">您已经成年，需要买票</span><span class="sh">"</span><span class="p">)</span>
<span class="k">elif</span> <span class="n">age</span> <span class="o">&lt;=</span> <span class="mi">10</span><span class="p">:</span>
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">您未成年，不需要买票</span><span class="sh">"</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">mmmmm</span><span class="sh">"</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">欢迎游玩</span><span class="sh">"</span><span class="p">)</span>
</code></pre></div></div>

<h5 id="for循环语句">for循环语句</h5>

<p>for 临时变量 in 待处理数据集（可迭代对象）:</p>

<p>​        循环满足条件时执行的代码</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">name</span> <span class="o">=</span> <span class="sh">"</span><span class="s">python</span><span class="sh">"</span>
<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">name</span><span class="p">:</span>
    <span class="nf">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">range</span><span class="p">(</span><span class="n">num</span><span class="p">)</span>
<span class="c1"># 从0取到num-1
</span><span class="nf">range</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span><span class="o">=</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">]</span>

<span class="nf">range</span><span class="p">(</span><span class="n">num1</span><span class="p">,</span><span class="n">num2</span><span class="p">)</span>
<span class="c1"># 从num1取到num2（不包含num2本身）
</span><span class="nf">range</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">=</span><span class="p">[</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">]</span>

<span class="nf">range</span><span class="p">(</span><span class="n">num1</span><span class="p">,</span><span class="n">num2</span><span class="p">,</span><span class="n">step</span><span class="p">)</span>
<span class="c1"># 从num1开始，到num2(不包含num2),是以step为间隔
</span><span class="nf">range</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">=</span><span class="p">[</span><span class="mi">5</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">9</span><span class="p">]</span>
</code></pre></div></div>

<ul>
  <li>作用域</li>
</ul>

<p>​    注意for中定义的临时变量不可以在for循环的外面使用！</p>

<h5 id="continue和break">continue和break</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">continue</span><span class="p">:</span><span class="n">进入下一个循环</span>
<span class="k">break</span><span class="p">:</span><span class="n">结束当前循环</span>
</code></pre></div></div>

<h3 id="函数">函数</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">#  函数的定义
</span><span class="k">def</span> <span class="nf">name</span><span class="p">(</span><span class="n">variable</span><span class="p">):</span>
    <span class="n">body</span>
    <span class="k">return</span> <span class="n">value</span>
<span class="c1"># 注意:python不用写返回类型，自动匹配
</span></code></pre></div></div>

<p>思考：如果函数没有使用return语句返回数据，那么函数有返回值吗？</p>

<p>事实上：有的。</p>

<p>Python中有一个特殊的字面量：None，其类型是：&lt;class ‘NoneType’&gt;，无返回值的函数，实际上就是返回了：None这个字面量</p>

<p>None表示：空的、无实际意义的意思</p>

<p>函数返回None，就表示，这个函数没有返回什么有意义的内容，也就是返回了空的意思。</p>

<p><strong>在Python中，None是一个单独的对象，它是NoneType类的唯一实例。它在内存中以单例模式存储，也就是说只有一个None对象存在。当我们使用None时，我们实际上是在引用这个唯一的None对象。</strong></p>

<p>None可以主动使用return返回，效果等同于不写return语句</p>

<ul>
  <li>
    <p>None类型的应用场景：</p>

    <ul>
      <li>
        <p>用在函数无返回值上</p>
      </li>
      <li>
        <p>用在if判断上</p>

        <ul>
          <li><strong>在if判断中，None等同于False</strong></li>
          <li><strong>一般用于在函数中主动返回None，配合if判断做相关处理</strong></li>
        </ul>

        <div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">check_age</span><span class="p">(</span><span class="n">age</span><span class="p">)</span>
    <span class="k">if</span> <span class="n">age</span> <span class="o">&gt;</span> <span class="mi">18</span>
        <span class="k">return</span> <span class="sh">"</span><span class="s">SUCCESS</span><span class="sh">"</span>
    <span class="k">return</span> <span class="bp">None</span>
    
<span class="n">result</span> <span class="o">=</span> <span class="nf">check_age</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
<span class="k">if</span> <span class="ow">not</span> <span class="n">result</span>
    <span class="nf">print</span><span class="p">(</span><span class="sh">"</span><span class="s">未成年，不可进入</span><span class="sh">"</span><span class="p">)</span>
</code></pre></div>        </div>

        <ul>
          <li>
            <p>用于声明无内容的变量上</p>

            <ul>
              <li>定义变量，但暂时不需要变量有具体值，可以用None来代替</li>
            </ul>

            <div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 暂不赋予变量具体值
</span><span class="n">name</span> <span class="o">=</span> <span class="bp">None</span>
</code></pre></div>            </div>
          </li>
        </ul>
      </li>
    </ul>
  </li>
  <li>
    <p>函数的说明文档</p>

    <ul>
      <li>在PyCharm中可以通过鼠标悬停，查看调用函数的说明文档</li>
    </ul>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">func</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">):</span>
    <span class="sh">"""</span><span class="s">
    函数说明
    :param x: 形参x的说明
    :param y: 形参y的说明
    :retrun: 返回值的说明
    </span><span class="sh">"""</span>
    <span class="n">body</span>
    <span class="k">return</span> <span class="n">返回值</span>
</code></pre></div></div>

<ul>
  <li>
    <p>局部变量与全局变量</p>

    <ul>
      <li>在函数内部定义的就是局部变量</li>
      <li>在函数外定义的就是全局变量</li>
    </ul>
  </li>
  <li>
    <p>global 关键字可以在函数内部声明变量为全局变量</p>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">num</span> <span class="o">=</span> <span class="mi">100</span>
<span class="k">def</span> <span class="nf">testB</span><span class="p">()</span>
    <span class="c1"># global 关键字是声明a是全局变量
</span>    <span class="k">global</span> <span class="n">num</span>
    <span class="n">num</span> <span class="o">=</span> <span class="mi">200</span>
    <span class="nf">print</span><span class="p">(</span><span class="n">num</span><span class="p">)</span>
<span class="n">testB</span>
<span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">'</span><span class="s">全局变量num = </span><span class="si">{</span><span class="n">num</span><span class="si">}</span><span class="sh">'</span><span class="p">)</span>
<span class="c1"># 是对全局变量进行修改了
# 不加global不弄修改全局变量num，而是重新定义一个局部变量num
</span></code></pre></div></div>

<h3 id="数据容器">数据容器</h3>

<h4 id="列表list">列表（list）</h4>

<h5 id="列表的定义">列表的定义</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 字面量
</span><span class="p">[</span><span class="n">元素1</span><span class="p">,</span> <span class="n">元素2</span><span class="p">,</span> <span class="n">元素3</span><span class="p">,</span> <span class="n">元素4</span><span class="p">,</span> <span class="p">...]</span>

<span class="c1"># 定义变量
</span><span class="n">变量名称</span> <span class="o">=</span> <span class="p">[</span><span class="n">元素1</span><span class="p">,</span> <span class="n">元素2</span><span class="p">,</span> <span class="n">元素3</span><span class="p">,</span> <span class="n">元素4</span><span class="p">,</span> <span class="p">...]</span>

<span class="c1"># 定义空列表
</span><span class="n">变量名称</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">变量名称</span> <span class="o">=</span> <span class="nf">list</span><span class="p">()</span>
</code></pre></div></div>

<ul>
  <li>以 [] 作为标识</li>
  <li>列表内每一个元素之间用 ，逗号 隔开</li>
</ul>

<p>注意：列表可以一次存储多个数据，<strong>且可以为不同的数据类型，支持嵌套</strong></p>

<h5 id="列表的下标索引">列表的下标（索引）</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 语法： 列表[下表索引]
</span>
<span class="n">name_list</span> <span class="o">=</span> <span class="p">[</span><span class="sh">'</span><span class="s">Tom</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">Lily</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">Rose</span><span class="sh">'</span><span class="p">]</span>
<span class="nf">print</span><span class="p">(</span><span class="n">name_list</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
<span class="nf">print</span><span class="p">(</span><span class="n">name_list</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>
<span class="nf">print</span><span class="p">(</span><span class="n">name_list</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
<span class="o">&gt;</span>
<span class="n">Tom</span>
<span class="n">Lily</span>
<span class="n">Rose</span>

<span class="c1"># 支持反向索引
</span>
<span class="n">name_list</span> <span class="o">=</span> <span class="p">[</span><span class="sh">'</span><span class="s">Tom</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">Lily</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">Rose</span><span class="sh">'</span><span class="p">]</span>
<span class="nf">print</span><span class="p">(</span><span class="n">name_list</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
<span class="nf">print</span><span class="p">(</span><span class="n">name_list</span><span class="p">[</span><span class="o">-</span><span class="mi">2</span><span class="p">])</span>
<span class="nf">print</span><span class="p">(</span><span class="n">name_list</span><span class="p">[</span><span class="o">-</span><span class="mi">3</span><span class="p">])</span>
<span class="o">&gt;</span>
<span class="n">Rose</span>
<span class="n">Lily</span>
<span class="n">Tom</span>

<span class="c1"># 支持嵌套索引
</span>
<span class="n">my_list</span> <span class="o">=</span> <span class="p">[</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">],</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]</span> <span class="p">]</span>

<span class="nf">print</span><span class="p">(</span><span class="n">my_list</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>

<span class="nf">print</span><span class="p">(</span><span class="n">my_list</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">])</span>
</code></pre></div></div>

<h5 id="列表的常用方法">列表的常用方法</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 查询
# 语法：列表.index(元素)
# 功能：查找指定元素在列表的下标
</span>
<span class="n">my_list</span> <span class="o">=</span> <span class="p">[</span><span class="sh">"</span><span class="s">itheima</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">itcast</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">python</span><span class="sh">"</span><span class="p">]</span>
<span class="nf">print</span><span class="p">(</span><span class="n">my_list</span><span class="p">.</span><span class="nf">index</span><span class="p">(</span><span class="sh">"</span><span class="s">itcast</span><span class="sh">"</span><span class="p">))</span>

<span class="o">&gt;</span>
<span class="mi">1</span>

<span class="c1"># 修改
</span><span class="n">my_list</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">]</span>
<span class="n">my_list</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">5</span>
<span class="nf">print</span><span class="p">(</span><span class="n">my_list</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>

<span class="n">my_list</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">5</span><span class="p">]</span>
<span class="n">my_list</span><span class="p">[</span><span class="o">-</span><span class="mi">3</span><span class="p">]</span> <span class="o">=</span> <span class="mi">5</span>
<span class="nf">print</span><span class="p">(</span><span class="n">my_list</span><span class="p">)</span>


<span class="c1"># 插入
</span><span class="n">my_list</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
<span class="n">my_list</span><span class="p">.</span><span class="nf">insert</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="sh">"</span><span class="s">itheima</span><span class="sh">"</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">my_list</span><span class="p">)</span>

<span class="o">&gt;</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="sh">'</span><span class="s">itheima</span><span class="sh">'</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>

<span class="c1"># 追加
</span><span class="n">my_list</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
<span class="n">my_list</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">my_list</span><span class="p">)</span>
<span class="o">&gt;</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">]</span>

<span class="n">my_list</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
<span class="n">my_list</span><span class="p">.</span><span class="nf">append</span><span class="p">([</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">])</span>
<span class="nf">print</span><span class="p">(</span><span class="n">my_list</span><span class="p">)</span>
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]]</span>

<span class="c1"># 追加元素2
</span><span class="n">my_list</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
<span class="n">my_list</span><span class="p">.</span><span class="nf">extend</span><span class="p">([</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">])</span>
<span class="nf">print</span><span class="p">(</span><span class="n">my_list</span><span class="p">)</span>
<span class="o">&gt;</span> 
<span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">]</span>

<span class="c1"># 删除元素
</span><span class="n">my_list</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>

<span class="k">del</span> <span class="n">my_list</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
<span class="k">print</span>

<span class="n">my_list</span><span class="p">.</span><span class="nf">pop</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">my_list</span><span class="p">)</span>
</code></pre></div></div>

<h5 id="列表的特点">列表的特点</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mf">1.</span> <span class="n">可以容纳多个数据</span><span class="err">（</span><span class="n">上限是2</span><span class="o">**</span><span class="mi">63</span><span class="o">-</span><span class="mi">1</span><span class="err">）</span>

<span class="mf">2.</span> <span class="n">可以容纳不同类型的数据</span><span class="err">（</span><span class="n">混装</span><span class="err">）</span>

<span class="mf">3.</span> <span class="n">数据是有序存储的</span>

<span class="mf">4.</span> <span class="n">允许重复数据存在</span>

<span class="mf">5.</span> <span class="n">可以修改</span>
</code></pre></div></div>

<h4 id="元组tuple">元组（tuple）</h4>

<p>列表是可以修改的，但是元组一旦定义完成，就不能修改</p>

<h5 id="元组的定义">元组的定义</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 定义元组字面量
</span><span class="p">(</span><span class="n">元素</span><span class="err">，</span><span class="n">元素</span><span class="err">，</span><span class="p">......</span><span class="err">，</span><span class="n">元素</span><span class="p">)</span>

<span class="c1"># 定义元组变量
</span><span class="n">变量名称</span> <span class="o">=</span> <span class="p">(</span><span class="n">元素</span><span class="p">,</span><span class="n">元素</span><span class="p">,.....,</span><span class="n">元素</span><span class="p">)</span>

<span class="c1"># 定义空元组
</span><span class="n">变量名称</span> <span class="o">=</span> <span class="p">()</span>        <span class="c1"># 方式1
</span><span class="n">变量名称</span> <span class="o">=</span> <span class="nf">tuple</span><span class="p">()</span>     <span class="c1"># 方式2
</span>
<span class="n">注意</span><span class="err">！</span>
<span class="c1"># 定义3个元素的元组
</span><span class="n">t1</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="sh">'</span><span class="s">hello</span><span class="sh">'</span><span class="p">,</span> <span class="bp">True</span><span class="p">)</span>

<span class="c1"># 定义1个元素的元组
</span><span class="n">t2</span> <span class="o">=</span> <span class="p">(</span><span class="sh">'</span><span class="s">hello</span><span class="sh">'</span><span class="p">,</span> <span class="p">)</span>    <span class="c1"># 注意，必须带有逗号，否则不是元组类型，而括号内唯一元素的类型
</span>
<span class="c1"># 元组也支持嵌套
</span><span class="n">t1</span>  <span class="o">=</span> <span class="p">(</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">),</span> <span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">)</span> <span class="p">)</span>
</code></pre></div></div>

<h5 id="元组的相关操作">元组的相关操作</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 根据下标（索引）去除数据
</span><span class="n">t1</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="sh">'</span><span class="s">hello</span><span class="sh">'</span><span class="p">)</span>

<span class="c1"># 根据index(),查找特定元素的的第一个匹配项
</span><span class="n">t1</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="sh">'</span><span class="s">hello</span><span class="sh">'</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="sh">'</span><span class="s">hello</span><span class="sh">'</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">t1</span><span class="p">.</span><span class="nf">index</span><span class="p">(</span><span class="sh">'</span><span class="s">hello</span><span class="sh">'</span><span class="p">))</span>

<span class="c1"># 统计某个数据在元组内出现的次数
</span><span class="n">t1</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="sh">'</span><span class="s">hello</span><span class="sh">'</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="sh">'</span><span class="s">ehllo</span><span class="sh">'</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">t1</span><span class="p">.</span><span class="nf">count</span><span class="p">(</span><span class="sh">'</span><span class="s">hello</span><span class="sh">'</span><span class="p">))</span>

<span class="c1"># 统计元组内的元素的个数
</span><span class="n">t1</span> <span class="o">=</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">t1</span><span class="p">))</span>

<span class="n">注意</span><span class="err">！</span>

<span class="mf">1.</span> <span class="n">不可以修改元组的内容</span><span class="err">，</span><span class="n">否则会直接报错</span>

<span class="mf">2.</span> <span class="n">可以修改元组内的list的内容</span>

<span class="mf">3.</span> <span class="n">不可以替换list为其他的list或其他类型</span>
</code></pre></div></div>

<h5 id="元组的特点">元组的特点</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mf">1.</span> <span class="n">可以容纳多个数据</span>

<span class="mf">2.</span> <span class="n">可以容纳不同类型的数据</span><span class="err">（</span><span class="n">混装</span><span class="err">）</span>

<span class="mf">3.</span> <span class="n">数据是有序存储的</span><span class="err">（</span><span class="n">下标索引</span><span class="err">）</span>

<span class="mf">4.</span> <span class="n">允许重复数据存在</span>

<span class="mf">5.</span> <span class="n">不可以修改</span><span class="err">（</span><span class="n">most</span> <span class="n">important</span><span class="err">）</span>

<span class="mf">6.</span> <span class="n">支持for循环</span>
</code></pre></div></div>

<h4 id="字符串">字符串</h4>

<h5 id="字符串的特点">字符串的特点</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">同元组一样</span><span class="err">，</span><span class="n">字符串是一个</span><span class="err">：</span><span class="n">无法修改的数据容器</span><span class="err">。</span>

<span class="n">不能</span><span class="err">！</span>
<span class="mf">1.</span> <span class="n">修改指定下表的字符</span>    <span class="p">(</span><span class="nb">str</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="sh">'</span><span class="s">a</span><span class="sh">'</span><span class="p">)</span>

<span class="mf">2.</span> <span class="n">移除特定下表的字符</span>    <span class="p">(</span><span class="k">del</span> <span class="nb">str</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>

<span class="mf">3.</span> <span class="n">追加字符</span>                <span class="p">(</span><span class="nb">str</span><span class="p">.</span><span class="nf">append</span><span class="p">())</span>

<span class="n">如果必须要进行以上操作</span><span class="err">，</span><span class="n">只能得到一个新的字符串</span><span class="err">，</span><span class="n">旧的字符串是无法修改的</span>
</code></pre></div></div>

<h5 id="字符串的常用操作">字符串的常用操作</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 查找特定字符串的下标索引值
</span><span class="n">my_str</span> <span class="o">=</span> <span class="sh">"</span><span class="s">itcast and itheima</span><span class="sh">"</span>
<span class="nf">print</span><span class="p">(</span><span class="n">my_str</span><span class="p">.</span><span class="nf">index</span><span class="p">(</span><span class="sh">"</span><span class="s">and</span><span class="sh">"</span><span class="p">))</span>

<span class="c1"># 字符串的替换（不是修改）
</span><span class="n">name</span> <span class="o">=</span> <span class="sh">"</span><span class="s">itheima itcast</span><span class="sh">"</span>
<span class="n">new_name</span> <span class="o">=</span> <span class="n">name</span><span class="p">.</span><span class="nf">replace</span><span class="p">(</span><span class="sh">"</span><span class="s">it</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">he</span><span class="sh">"</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="n">new_name</span><span class="p">)</span>            <span class="c1"># 结果，hetheiam hecast
</span><span class="nf">print</span><span class="p">(</span><span class="n">name</span><span class="p">)</span>                <span class="c1"># 结果，ittheiam itcast
</span>
    <span class="n">可以看到</span><span class="err">，</span><span class="n">字符串name本身并没有发生变化</span>
    <span class="n">而是得到了一个新的字符串对象</span>

<span class="c1"># 字符串的分割
</span>
<span class="n">name</span> <span class="o">=</span> <span class="sh">"</span><span class="s">it he she</span><span class="sh">"</span>
<span class="n">name_list</span> <span class="o">=</span> <span class="n">name</span><span class="p">.</span><span class="nf">split</span><span class="p">(</span><span class="sh">"</span><span class="s"> </span><span class="sh">"</span><span class="p">)</span>

<span class="nf">print</span><span class="p">(</span><span class="n">name_list</span><span class="p">)</span>        <span class="c1"># 结果，['it', 'he', 'she']
</span><span class="nf">print</span><span class="p">(</span><span class="nf">type</span><span class="p">(</span><span class="n">name_list</span><span class="p">))</span>     <span class="c1"># 结果：&lt;class 'list'&gt;
</span>
<span class="p">.</span><span class="n">split函数是将给定的分割符对字符串进行分割</span><span class="err">，</span><span class="n">变成多个子字符串</span><span class="err">，</span><span class="n">并存入一个列表对象中</span><span class="err">。</span>

<span class="c1"># 字符串的规整操作1（去前后空格）
</span>
<span class="n">my_str</span> <span class="o">=</span> <span class="sh">"</span><span class="s"> itheima and itcast </span><span class="sh">"</span>
<span class="nf">print</span><span class="p">(</span><span class="n">my_str</span><span class="p">.</span><span class="nf">strip</span><span class="p">())</span>            <span class="c1">#结果："itheima and itcast"
</span>

<span class="c1"># 字符串的规整操作2（去前后指定字符串）
</span>
<span class="n">my_str</span> <span class="o">=</span> <span class="sh">"</span><span class="s">12itheima and itcast21</span><span class="sh">"</span>
<span class="nf">print</span><span class="p">(</span><span class="n">my_str</span><span class="p">.</span><span class="nf">strip</span><span class="p">(</span><span class="sh">"</span><span class="s">12</span><span class="sh">"</span><span class="p">))</span>         <span class="c1"># 结果："itheima and itcast"
</span><span class="err">——————————————————————————————————————————————————————————————————————？</span>
<span class="n">问题</span><span class="err">：</span>
<span class="mf">1.</span> <span class="n">无论是12还是21都可以去除</span>
<span class="mf">2.</span> <span class="mi">21</span><span class="n">i会把前面的去掉</span><span class="err">，</span><span class="n">但是后面的不变</span>
<span class="err">——》</span><span class="n">推测不根据顺序</span><span class="err">，</span><span class="n">而是一个无顺序的集合</span>


<span class="c1"># 统计字符串中某字符串的出现次数
</span>
<span class="n">my_str</span> <span class="o">=</span> <span class="sh">"</span><span class="s">itheima and itcast</span><span class="sh">"</span>
<span class="nf">print</span><span class="p">(</span><span class="n">my_str</span><span class="p">.</span><span class="nf">count</span><span class="p">(</span><span class="sh">"</span><span class="s">it</span><span class="sh">"</span><span class="p">))</span>         <span class="c1"># 结果:2
</span>
<span class="c1"># 统计字符串的长度
</span>
<span class="n">my_str</span> <span class="o">=</span> <span class="sh">"</span><span class="s">1234 abcd !@#$</span><span class="sh">"</span>
<span class="nf">print</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">my_str</span><span class="p">))</span>                <span class="c1"># 结果:14
</span></code></pre></div></div>

<h5 id="字符串的特点-1">字符串的特点</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="mf">1.</span> <span class="n">只能存储字符串</span>

<span class="mf">2.</span> <span class="n">长度任意</span>

<span class="mf">3.</span> <span class="n">支持下标索引</span>

<span class="mf">4.</span> <span class="n">允许重复字符存在</span>

<span class="mf">5.</span> <span class="n">不可以修改</span>

<span class="mf">6.</span> <span class="n">支持for循环</span>
</code></pre></div></div>

<h5 id="序列切片">序列切片</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">切片</span><span class="err">：</span><span class="n">从一个序列中</span><span class="err">，</span><span class="n">取出一个子序列</span>

<span class="n">语法</span><span class="err">：</span><span class="n">序列</span><span class="p">[</span><span class="n">起始下标</span><span class="p">:</span><span class="n">结束下标</span><span class="p">:</span><span class="n">步长</span><span class="p">]</span>

<span class="o">&gt;&gt;</span>
    <span class="n">不是由函数实现功能</span><span class="err">，</span><span class="n">是根据两个中括号来实现</span><span class="err">，</span><span class="n">推测是把函数内嵌进入python编辑器里边</span><span class="err">。</span>

<span class="o">-</span> <span class="n">首先所有的序列都可以使用这个切片功能</span><span class="err">，</span><span class="n">包括元组</span><span class="err">，</span><span class="n">字符串</span><span class="err">，</span><span class="n">列表都可以</span>

<span class="o">-</span> <span class="n">步长的含义</span><span class="err">：</span><span class="mi">1</span><span class="p">:</span><span class="n">表示一个一个取元素</span>
            <span class="mi">2</span><span class="p">:</span><span class="n">表示跳过一个元素取</span>
            <span class="mi">3</span><span class="p">:</span><span class="n">步长可以用负数表示</span><span class="err">，</span><span class="n">表示反向取</span><span class="err">，</span><span class="n">此时</span><span class="err">，</span><span class="n">起始下标和结束下标也要反向标记</span>
            <span class="mi">4</span><span class="p">:</span><span class="n">反向标记</span><span class="err">，</span><span class="n">可以用来反着取比如12345取54321</span>

<span class="err">！</span><span class="n">注意</span><span class="err">：</span><span class="n">步长不可以为0</span><span class="err">，</span><span class="n">其实想想就知道</span><span class="err">，</span><span class="n">走0步不就一直停在那了</span>
</code></pre></div></div>

<h4 id="集合">集合</h4>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">-</span> <span class="n">列表</span><span class="err">：</span><span class="p">[]</span>
<span class="o">-</span> <span class="n">元组</span><span class="err">：</span><span class="p">()</span>
<span class="o">-</span> <span class="n">字符串</span><span class="err">：</span><span class="sh">""</span>
<span class="o">-</span> <span class="n">集合</span><span class="err">：</span><span class="p">{}</span>
</code></pre></div></div>

<h5 id="集合的定义">集合的定义</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 定义集合字面量
</span><span class="p">{</span><span class="n">元素</span><span class="p">,</span> <span class="n">元素</span><span class="p">,</span> <span class="p">......,</span> <span class="n">元素</span><span class="p">}</span>

<span class="c1"># 定义集合变量
</span><span class="n">变量名称</span> <span class="o">=</span> <span class="p">{</span><span class="n">元素</span><span class="p">,</span> <span class="n">元素</span><span class="p">,</span> <span class="p">......,</span> <span class="n">元素</span><span class="p">}</span>

<span class="c1"># 定义空集合
</span><span class="n">变量名称</span> <span class="o">=</span> <span class="nf">set</span><span class="p">()</span>
</code></pre></div></div>

<h5 id="集合的特点">集合的特点</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">-</span> <span class="n">不重复</span>
    <span class="n">即使在定义集合变量的时候由重复的元素</span><span class="err">，</span><span class="n">也会自动去重</span>

<span class="o">-</span> <span class="n">没有顺序</span>
    <span class="n">不能保证顺序与创建的时候一致</span>
    <span class="n">不支持下标索引</span>

<span class="o">-</span> <span class="n">可以修改</span>
    <span class="n">增加或删除元素等</span>

<span class="o">-</span> <span class="n">支持for循环</span>
</code></pre></div></div>

<h5 id="集合的常用操作">集合的常用操作</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 修改
</span><span class="n">my_set</span> <span class="o">=</span> <span class="p">{</span><span class="sh">"</span><span class="s">hello</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">world</span><span class="sh">"</span><span class="p">}</span>
<span class="n">my_set</span><span class="p">.</span><span class="nf">add</span><span class="p">(</span><span class="sh">"</span><span class="s">itheima</span><span class="sh">"</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">my_set</span><span class="p">)</span> <span class="c1"># 结果{'hello', 'itheima', world}
</span>
<span class="c1"># 移除
</span><span class="n">my_set</span> <span class="o">=</span> <span class="p">{</span><span class="sh">"</span><span class="s">hello</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">world</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">itheima</span><span class="sh">"</span><span class="p">}</span>
<span class="n">my_set</span><span class="p">.</span><span class="nf">remove</span><span class="p">(</span><span class="sh">"</span><span class="s">hello</span><span class="sh">"</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">my_set</span><span class="p">)</span>     <span class="c1"># 结果 {'hello', 'itheima'}
</span>
<span class="c1"># 随机取出元素
</span><span class="n">my_set</span> <span class="o">=</span> <span class="p">{</span><span class="sh">"</span><span class="s">hello</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">world</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">itheiam</span><span class="sh">"</span><span class="p">}</span>
<span class="n">element</span> <span class="o">=</span> <span class="n">my_set</span><span class="p">.</span><span class="nf">pop</span><span class="p">()</span>
<span class="nf">print</span><span class="p">(</span><span class="n">my_set</span><span class="p">)</span>    <span class="c1"># 结果 {'world', 'itheima'}
</span><span class="nf">print</span><span class="p">(</span><span class="n">element</span><span class="p">)</span>    <span class="c1"># 结果 'hello'
</span>
<span class="c1"># 清空集合
</span><span class="n">my_set</span> <span class="o">=</span> <span class="p">{</span><span class="sh">"</span><span class="s">hello</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">world</span><span class="sh">"</span><span class="p">,</span> <span class="sh">"</span><span class="s">itheiam</span><span class="sh">"</span><span class="p">}</span>
<span class="n">my_set</span><span class="p">.</span><span class="nf">clear</span><span class="p">()</span>
<span class="nf">print</span><span class="p">(</span><span class="n">my_set</span><span class="p">)</span>    <span class="c1"># 结果：set()    空集合
</span>
<span class="c1"># 取出两个集合的差集
</span><span class="n">set1</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">}</span>
<span class="n">set2</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">}</span>
<span class="n">set3</span> <span class="o">=</span> <span class="n">set1</span><span class="p">.</span><span class="nf">difference</span><span class="p">(</span><span class="n">set2</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">set3</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">set1</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">set2</span><span class="p">)</span>

<span class="c1"># 消除两个集合的差集
</span><span class="n">set1</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">}</span>
<span class="n">set2</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">}</span>
<span class="n">set1</span><span class="p">.</span><span class="nf">difference_update</span><span class="p">(</span><span class="n">set2</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">set1</span><span class="p">)</span>    <span class="c1"># {2, 3}
</span><span class="nf">print</span><span class="p">(</span><span class="n">set2</span><span class="p">)</span>    <span class="c1"># {1, 5, 6}
</span><span class="err">！</span><span class="n">注意</span><span class="err">，</span><span class="n">此时集合1被修改</span><span class="err">，</span><span class="n">但是集合2不变</span>

<span class="c1"># 两个集合合并
</span><span class="n">set1</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">}</span>
<span class="n">set2</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">}</span>
<span class="n">set3</span> <span class="o">=</span> <span class="n">set1</span><span class="p">.</span><span class="nf">union</span><span class="p">(</span><span class="n">set2</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">set3</span><span class="p">)</span>    <span class="c1"># 结果：{1, 2, 3, 5, 6}，新集合
</span><span class="nf">print</span><span class="p">(</span><span class="n">set1</span><span class="p">)</span>    <span class="c1"># 结果：{1, 2, 3}，set1不变
</span><span class="nf">print</span><span class="p">(</span><span class="n">set2</span><span class="p">)</span>    <span class="c1"># 结果：{1, 5, 6}，set2不变
</span>
<span class="c1"># 查看集合的元素的数量
</span><span class="n">set1</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">}</span>
<span class="nf">print</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">set1</span><span class="p">))</span>    <span class="c1"># 结果：3
</span>
<span class="c1"># 集合同样支持使用for循环遍历
</span><span class="n">set1</span> <span class="o">=</span> <span class="p">{</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">}</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">set1</span><span class="p">:</span>
    <span class="nf">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>

<span class="c1"># 结果
</span><span class="mi">1</span>
<span class="mi">2</span>
<span class="mi">3</span>
</code></pre></div></div>

<h4 id="字典dict">字典（dict）</h4>

<h5 id="字典的定义">字典的定义</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 定义字典字面量
</span><span class="p">{</span><span class="n">key</span><span class="p">:</span> <span class="n">value</span><span class="p">,</span> <span class="n">key</span><span class="p">:</span> <span class="n">value</span><span class="p">,</span> <span class="p">...,</span> <span class="n">key</span><span class="p">:</span> <span class="n">value</span><span class="p">}</span>
<span class="c1"># 定义字典变量
</span><span class="n">my_dict</span> <span class="o">=</span> <span class="p">{</span><span class="n">key</span><span class="p">:</span> <span class="n">value</span><span class="p">,</span> <span class="n">key</span><span class="p">:</span> <span class="n">value</span><span class="p">,</span> <span class="p">...,</span> <span class="n">key</span><span class="p">:</span> <span class="n">value</span><span class="p">}</span>
<span class="c1"># 定义空字典
</span><span class="n">my_dict</span> <span class="o">=</span> <span class="p">{}</span>    <span class="c1"># 空字典定义方式1
</span><span class="n">my_dict</span> <span class="o">=</span> <span class="nf">dict</span><span class="p">()</span><span class="c1"># 空字典定义方式2
</span>
<span class="n">注意</span><span class="err">：</span>
<span class="o">-</span> <span class="n">使用</span><span class="p">{}</span><span class="n">存储原始</span><span class="err">，</span><span class="n">每一个元素是一个键值对</span>
<span class="o">-</span> <span class="n">每一个键值对包含Key和Value</span><span class="err">（</span><span class="n">用冒号分隔</span><span class="err">）</span>
<span class="o">-</span> <span class="n">键值对之间使用逗号分隔</span>
<span class="o">-</span> <span class="n">Key和Value可以是任意类型的数据</span><span class="err">（</span><span class="n">key不可为字典</span><span class="err">）</span>
<span class="o">-</span> <span class="n">Key不可重复</span><span class="err">，</span><span class="n">重复会对原有数据覆盖</span>
</code></pre></div></div>

<h5 id="字典数据的获取">字典数据的获取</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 语法，字典[key]可以取到对应的value
</span><span class="n">stu_score</span> <span class="o">=</span> <span class="p">{</span><span class="sh">"</span><span class="s">王力宏</span><span class="sh">"</span><span class="p">:</span> <span class="mi">99</span><span class="p">,</span> <span class="sh">"</span><span class="s">周杰伦</span><span class="sh">"</span><span class="p">:</span> <span class="mi">88</span><span class="p">,</span> <span class="sh">"</span><span class="s">林俊杰</span><span class="sh">"</span><span class="p">:</span> <span class="mi">77</span><span class="p">}</span>
<span class="nf">print</span><span class="p">(</span><span class="n">stu_score</span><span class="p">[</span><span class="sh">"</span><span class="s">王力宏</span><span class="sh">"</span><span class="p">])</span>    <span class="c1"># 结果：99
</span><span class="nf">print</span><span class="p">(</span><span class="n">stu_score</span><span class="p">[</span><span class="sh">"</span><span class="s">周杰伦</span><span class="sh">"</span><span class="p">])</span>    <span class="c1"># 结果：88
</span><span class="nf">print</span><span class="p">(</span><span class="n">stu_score</span><span class="p">[</span><span class="sh">"</span><span class="s">林俊杰</span><span class="sh">"</span><span class="p">])</span>    <span class="c1"># 结果：77
</span></code></pre></div></div>

<h5 id="字典可以嵌套">字典可以嵌套</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">stu_score</span> <span class="o">=</span> <span class="p">{</span>
    <span class="sh">"</span><span class="s">wang</span><span class="sh">"</span><span class="p">:</span> <span class="p">{</span><span class="sh">"</span><span class="s">chinese</span><span class="sh">"</span><span class="p">:</span> <span class="mi">77</span><span class="p">,</span> <span class="sh">"</span><span class="s">math</span><span class="sh">"</span><span class="p">:</span> <span class="mi">66</span><span class="p">,</span> <span class="sh">"</span><span class="s">English</span><span class="sh">"</span><span class="p">:</span> <span class="mi">33</span><span class="p">}</span>
    <span class="sh">"</span><span class="s">zhou</span><span class="sh">"</span><span class="p">:</span> <span class="p">{</span><span class="sh">"</span><span class="s">chinese</span><span class="sh">"</span><span class="p">:</span> <span class="mi">88</span><span class="p">,</span> <span class="sh">"</span><span class="s">math</span><span class="sh">"</span><span class="p">:</span> <span class="mi">86</span><span class="p">,</span> <span class="sh">"</span><span class="s">English</span><span class="sh">"</span><span class="p">:</span> <span class="mi">55</span><span class="p">}</span>
    <span class="sh">"</span><span class="s">lin</span><span class="sh">"</span><span class="p">:</span> <span class="p">{</span><span class="sh">"</span><span class="s">chinese</span><span class="sh">"</span><span class="p">:</span> <span class="mi">99</span><span class="p">,</span> <span class="sh">"</span><span class="s">math</span><span class="sh">"</span><span class="p">:</span> <span class="mi">96</span><span class="p">,</span> <span class="sh">"</span><span class="s">English</span><span class="sh">"</span><span class="p">:</span> <span class="mi">66</span><span class="p">}</span>
<span class="p">}</span>

<span class="nf">print</span><span class="p">(</span><span class="n">stu_score</span><span class="p">[</span><span class="sh">"</span><span class="s">wang</span><span class="sh">"</span><span class="p">])</span>    <span class="c1"># 结果：{"chinese": 77, "math": 66, "English": 33}
</span></code></pre></div></div>

<h5 id="字典的操作">字典的操作</h5>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 新增元素
</span><span class="n">stu_score</span><span class="p">[</span><span class="sh">"</span><span class="s">zhang</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="mi">66</span>

<span class="c1"># 修改元素
</span><span class="n">stu_score</span><span class="p">[</span><span class="sh">"</span><span class="s">wang</span><span class="sh">"</span><span class="p">]</span> <span class="o">=</span> <span class="mi">100</span>



<span class="c1"># 删除元素
</span><span class="n">value</span> <span class="o">=</span> <span class="n">stu_score</span><span class="p">.</span><span class="nf">pop</span><span class="p">(</span><span class="sh">"</span><span class="s">wang</span><span class="sh">"</span><span class="p">)</span>
<span class="nf">print</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>        <span class="c1"># 结果：77
</span><span class="nf">print</span><span class="p">(</span><span class="n">stu_score</span><span class="p">)</span>    <span class="c1"># 结果：wang的key已经消失
</span>
<span class="c1"># 清空字典
</span><span class="n">stu_score</span><span class="p">.</span><span class="nf">clear</span><span class="p">()</span>

<span class="c1"># 获取字典中的全部的key
</span><span class="n">keys</span> <span class="o">=</span> <span class="n">stu_score</span><span class="p">.</span><span class="nf">keys</span><span class="p">()</span>
<span class="nf">print</span><span class="p">(</span><span class="n">keys</span><span class="p">)</span> <span class="c1"># 结果：dict_keys(['wang', 'zhou', 'lin'])
</span>
<span class="c1"># 遍历字典
</span><span class="n">stu_score</span> <span class="o">=</span> <span class="p">{</span><span class="sh">"</span><span class="s">王力宏</span><span class="sh">"</span><span class="p">:</span> <span class="mi">99</span><span class="p">,</span> <span class="sh">"</span><span class="s">周杰伦</span><span class="sh">"</span><span class="p">:</span> <span class="mi">88</span><span class="p">,</span> <span class="sh">"</span><span class="s">林俊杰</span><span class="sh">"</span><span class="p">:</span> <span class="mi">77</span><span class="p">}</span>
<span class="n">keys</span> <span class="o">=</span> <span class="n">stu_score</span><span class="p">.</span><span class="nf">keys</span><span class="p">()</span>
<span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="n">keys</span><span class="p">:</span>
    <span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">"</span><span class="s">学生:</span><span class="si">{</span><span class="n">key</span><span class="si">}</span><span class="s">,分数:</span><span class="si">{</span><span class="n">stu_score</span><span class="p">[</span><span class="n">key</span><span class="p">]</span><span class="si">}</span><span class="sh">"</span><span class="p">)</span>

<span class="c1"># 计算字典内键值对的数量
</span><span class="n">stu_score</span> <span class="o">=</span> <span class="p">{</span>
    <span class="sh">"</span><span class="s">王力宏</span><span class="sh">"</span><span class="p">:</span> <span class="mi">99</span><span class="p">,</span> 
    <span class="sh">"</span><span class="s">周杰伦</span><span class="sh">"</span><span class="p">:</span> <span class="mi">88</span><span class="p">,</span> 
    <span class="sh">"</span><span class="s">林俊杰</span><span class="sh">"</span><span class="p">:</span> <span class="mi">77</span>
<span class="p">}</span>
<span class="nf">print</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">stu_score</span><span class="p">))</span>        <span class="c1"># 结果：3
</span></code></pre></div></div>]]></content><author><name></name></author><category term="python" /><summary type="html"><![CDATA[简单的案例]]></summary></entry><entry><title type="html">python文件打包成exe文件</title><link href="https://wsttask.github.io/2024/03/05/py%E6%89%93%E5%8C%85%E6%88%90exe%E6%96%87%E4%BB%B6.html" rel="alternate" type="text/html" title="python文件打包成exe文件" /><published>2024-03-05T22:55:33+08:00</published><updated>2024-03-05T22:55:33+08:00</updated><id>https://wsttask.github.io/2024/03/05/py%E6%89%93%E5%8C%85%E6%88%90exe%E6%96%87%E4%BB%B6</id><content type="html" xml:base="https://wsttask.github.io/2024/03/05/py%E6%89%93%E5%8C%85%E6%88%90exe%E6%96%87%E4%BB%B6.html"><![CDATA[<p><a href="https://blog.csdn.net/weixin_62651706/article/details/126219282?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522170965003116800215035562%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=170965003116800215035562&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-126219282-null-null.142^v99^pc_search_result_base2&amp;utm_term=%E5%A6%82%E4%BD%95%E6%8A%8Apython%E7%A8%8B%E5%BA%8F%E5%81%9A%E6%88%90exe&amp;spm=1018.2226.3001.4187">将Python程序打包成exe文件_python打包成exe-CSDN博客</a></p>

<p><a href="https://xiaokang2022.blog.csdn.net/article/details/127585881?spm=1001.2014.3001.5502">用 Pyinstaller 模块将 Python 程序打包成 exe 文件（全网最全面最详细，万字详述）_pyinstaller打包-CSDN博客</a></p>]]></content><author><name></name></author><summary type="html"><![CDATA[将Python程序打包成exe文件_python打包成exe-CSDN博客]]></summary></entry><entry><title type="html">为什么e叫自然常数</title><link href="https://wsttask.github.io/calculus/2024/03/04/%E4%B8%BA%E4%BB%80%E4%B9%88e%E5%8F%AB%E8%87%AA%E7%84%B6%E5%B8%B8%E6%95%B0.html" rel="alternate" type="text/html" title="为什么e叫自然常数" /><published>2024-03-04T17:44:12+08:00</published><updated>2024-03-04T17:44:12+08:00</updated><id>https://wsttask.github.io/calculus/2024/03/04/%E4%B8%BA%E4%BB%80%E4%B9%88e%E5%8F%AB%E8%87%AA%E7%84%B6%E5%B8%B8%E6%95%B0</id><content type="html" xml:base="https://wsttask.github.io/calculus/2024/03/04/%E4%B8%BA%E4%BB%80%E4%B9%88e%E5%8F%AB%E8%87%AA%E7%84%B6%E5%B8%B8%E6%95%B0.html"><![CDATA[<p><a href="https://www.zhihu.com/search?type=content&amp;q=e%E4%B8%BA%E4%BB%80%E4%B9%88%E5%8F%AB%E8%87%AA%E7%84%B6%E5%BA%95%E6%95%B0"> e为什么叫自然底数 - 搜索结果 - 知乎 (zhihu.com)</a></p>]]></content><author><name></name></author><category term="calculus" /><summary type="html"><![CDATA[e为什么叫自然底数 - 搜索结果 - 知乎 (zhihu.com)]]></summary></entry><entry><title type="html">为什么要引入第一个重要极限</title><link href="https://wsttask.github.io/calculus/2024/03/04/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%87%8D%E8%A6%81%E6%9E%81%E9%99%90.html" rel="alternate" type="text/html" title="为什么要引入第一个重要极限" /><published>2024-03-04T17:34:17+08:00</published><updated>2024-03-04T17:34:17+08:00</updated><id>https://wsttask.github.io/calculus/2024/03/04/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%87%8D%E8%A6%81%E6%9E%81%E9%99%90</id><content type="html" xml:base="https://wsttask.github.io/calculus/2024/03/04/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%BC%95%E5%85%A5%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%87%8D%E8%A6%81%E6%9E%81%E9%99%90.html"><![CDATA[<p><a href="https://zhuanlan.zhihu.com/p/492037185">【高数学习回顾】 1. 为什么要引入第一个重要极限 - 知乎 (zhihu.com)</a></p>]]></content><author><name></name></author><category term="calculus" /><summary type="html"><![CDATA[【高数学习回顾】 1. 为什么要引入第一个重要极限 - 知乎 (zhihu.com)]]></summary></entry><entry><title type="html">excerpt four</title><link href="https://wsttask.github.io/excerpt/2024/03/04/4.html" rel="alternate" type="text/html" title="excerpt four" /><published>2024-03-04T17:25:19+08:00</published><updated>2024-03-04T17:25:19+08:00</updated><id>https://wsttask.github.io/excerpt/2024/03/04/4</id><content type="html" xml:base="https://wsttask.github.io/excerpt/2024/03/04/4.html"><![CDATA[<ol>
  <li>
    <p>未知全貌，不予置评</p>
  </li>
  <li>
    <p>一个人最好的生活状态：是该看书时看书，该玩时尽情玩，看见优秀的人欣赏，看到落魄的人也不轻视，有自己的生活和小情趣，不用想去改变世界，努力去活出自己，没人爱时专注自己，有人爱时，有能力拥抱彼此</p>
  </li>
  <li>
    <p>早上起床你有两个选择，盖上被子做你没做完的梦，掀开被子完成你没完成的梦。</p>
  </li>
  <li>
    <p>奶奶说：“重男轻女的意思，就是让男生提重的东西，女生提轻的东西”</p>
  </li>
  <li>
    <p>就算公交上空无一人，司机也会把车开到终点站，我的意思是，你不要因为任何人的离开而停止原本的生活。</p>
  </li>
  <li>
    <p>所谓有趣的灵魂，实际上就是这个人的信息密度和知识层面，都远高于你，并愿意俯下身去听你说那毫无营养的废话与你交流，提出一些你没有听过的观点，颠覆了你短浅的想象力及三观。</p>
  </li>
  <li>
    <p>一本书重新读一遍，会有新的感悟，但不会有新的结局。</p>
  </li>
  <li>
    <p>放弃，不放弃；做面条，不做面条；你患得患失太在意从前又太担心将来，有句话说得好，昨天是段历史，明天是个谜团，而今天是天赐的礼物。要像珍惜礼物那样珍惜今天！<a href="https://www.bilibili.com/video/BV1iD4y1e7h4/?spm_id_from=333.337.search-card.all.click&amp;vd_source=ec2d561dc8bd6d2bdcc13e464af382d0">功夫熊猫</a></p>
  </li>
  <li>
    <p>忠告而善道之，不可则止，毋自辱焉。</p>
  </li>
  <li>
    <p>我深怕自己本非美玉，故而不敢加以刻苦琢磨，却又半信自己是块美玉，故又不肯庸庸碌碌，与瓦砾为伍。于是我渐渐地脱离凡尘，疏远世人，结果便是一任愤懑与羞恨日益助长内心那怯弱的自尊心。其实，任何人都是驯兽师，而那野兽，无非就是各人的性情而已。  山月记</p>
  </li>
  <li>
    <p>人的一生要经历三次成长
第一次，是明白事情的对与错
第二次，是明白事情不止对与错
第三次，是发现事情没有对与错时，仍然坚守自己</p>
  </li>
  <li>
    <p>你如果成功，得到的会是假朋友和真敌人，但不管怎样，还是要成功；你耗费数年所建设的，可能会毁于一旦，但不管怎样，还是要坚持；心胸最博大最宽容的人，可能会被心胸狭窄的人击倒，但不管怎样，该是要志存高远；人们的确需要帮助，但当你真的帮助他们的时候，他们反而攻击你，但不管怎样，还是要帮助他；当你将你拥有的最好的东西献给这个世界，你可能会被反咬一口，但不管怎样，还是要把最宝贵的东西献给世界。这也许就是经验哲学家阿奎拉所说的:我们今生活着的唯一意义，就是超越今生。</p>
  </li>
  <li>
    <p>一个人，有三次成长，
第一次，是明白事情的对错，
第二次，是明白事情不只有对错，
第三次，是明白事情事情不止有对错之后依然相信自己所坚持的东西，并为其负起责任——“奥托—阿波卡利斯”( ゜- ゜)つロ[保卫萝卜_哇]</p>
  </li>
  <li>
    <p>当我年轻的时候，我想我可以改变世界，后来当我年纪慢慢的渐长，我觉得改变世界可能很难，但是也许我能改变我的国家，进入这个花甲，或者年纪越来越大，我发现，哎呀，可改变国家也太难了，也许可以改变我的家庭，当我行将就木，我才发现，我想如果我从一开始只想着改变自己，那也许能够慢慢的改变我，进而改变我的家，那靠着我家人的帮助，说不定有一天我能改变国家，甚至说不定有一天我能影响世界。</p>
  </li>
  <li>
    <p>爱情就是你在世界有一个人那里，得到了彻底的、无限的、最高的承认</p>
  </li>
  <li>
    <p>如果感情淡了，我们可以在培养.无话可说了，就再去找话题. 觉得累了，我们重新认识.觉得腻了，就给彼此空间.人潮拥挤的城市能遇到你真的很不容易，也是真的不想推开了，我谁都不要了，让你难过的事我也不做了，请一直陪着我吧，真的很想和你有个很长的未来当你感觉爱开始变淡的时候，真正的爱才开始浮现。当然，你可以选择放弃掉，然后去寻找又一个新鲜的爱。但代价就是，你永远逃不过新的死循环。所谓新鲜感是和酒的人体验新的事物，而不是和新的人体验旧的过程。</p>
  </li>
  <li>
    <p>人间本不该令我这么欣喜的，但是你来了。</p>

    <p>——北岛</p>
  </li>
  <li>
    <p>圣修伯里《风沙星辰》：“生命教给我们：爱并非存在于两个人的相互的凝视，而是两个人一起望向外在的同一个方向。”</p>
  </li>
  <li>
    <p>你有很多事放不下吗？做人要潇洒一点，爱一个人未必一定要跟她一辈子，我喜欢一朵花，未必一定要把它摘下来，我喜欢风，难道叫风停下来你让我闻一闻，我喜欢云难道叫云飘下来，来罩着我，有时候太照顾别人的感受，会失去自我的，轻轻的我走了，正如我轻轻的来，挥一挥衣袖，不带走一片云彩</p>
  </li>
  <li>
    <p>为什么害怕独处？因为人在独处的时候总是会听到心灵深处的声音，你这一生到底想干嘛，你怎样活着才是有意义的。当这个声音不断地逼问你的时候，你会觉得烦躁，你就会觉得焦虑，因为你耳边始终有这种声音，所以你会多堵住耳朵。但这个声音沉静的时候，会感到迷茫。所以当你独处的时候，你始终是在焦虑，迷茫，空虚中周而复始。那大部分的人，就会选择拒绝倾听你心灵深处的追问。</p>
  </li>
  <li>
    <p>每天做好每天该做的事情，用做而不是用想，因为人生唯一确定的就是不确定的人生，人生唯一恐惧的就是恐惧本身。</p>
  </li>
  <li>
    <p>于是就会选择用忙碌来对抗这种生活，娱乐，工作，放纵来对抗自己心灵深处的追问，那只有当你真正地能够回答你心灵深处的那种追问，你才能够享受这种东西，但这是很难。我感觉我有答案，只是这个答案，我并不愿意告诉大家，这是我自己心里的答案，但是我希望我能够笃定这份答案，让我能够平静，能够享受独处，在忙碌中能够有从容和安静。</p>
  </li>
  <li>
    <p>《我曾七次鄙视自己的灵魂》
第一次当他本可进取时却故作谦卑
第二次当他空虚时，用爱欲来填充
第三次在堕落和努力之间他选择了堕落
第四次它犯了错却用别人的错来宽慰自己
第五次它自由软弱，却把他认为是生命的坚韧
第六次当他嘲笑他人愚蠢时，却不知自己更是蠢才
第七次它在泥潭时既彻底摆不了烂也不彻底甘心</p>
  </li>
</ol>]]></content><author><name></name></author><category term="excerpt" /><summary type="html"><![CDATA[未知全貌，不予置评]]></summary></entry><entry><title type="html">极值点、拐点、驻点、专题总结</title><link href="https://wsttask.github.io/calculus/2024/03/04/%E6%9E%81%E5%80%BC%E7%82%B9-%E9%A9%BB%E7%82%B9-%E6%8B%90%E7%82%B9.html" rel="alternate" type="text/html" title="极值点、拐点、驻点、专题总结" /><published>2024-03-04T17:19:00+08:00</published><updated>2024-03-04T17:19:00+08:00</updated><id>https://wsttask.github.io/calculus/2024/03/04/%E6%9E%81%E5%80%BC%E7%82%B9%E3%80%81%E9%A9%BB%E7%82%B9%E3%80%81%E6%8B%90%E7%82%B9</id><content type="html" xml:base="https://wsttask.github.io/calculus/2024/03/04/%E6%9E%81%E5%80%BC%E7%82%B9-%E9%A9%BB%E7%82%B9-%E6%8B%90%E7%82%B9.html"><![CDATA[<p><a href="https://zhuanlan.zhihu.com/p/676730495">极值点、拐点、驻点、专题总结 - 知乎 (zhihu.com)</a></p>

<ul>
  <li>
    <p><strong>极值点</strong>：函数在某一点的值大于该点邻域内任意一点的值 </p>

    <ul>
      <li>
        <p>极值点可能是驻点，驻点也可能是极值点</p>
      </li>
      <li>
        <p>极值点只能出现在导数为0的点和不可导点</p>
      </li>
    </ul>
  </li>
  <li>
    <p><strong>驻点</strong>：函数在一点处的一阶导数为零</p>
  </li>
  <li>
    <p><strong>拐点</strong>：出现在二阶导为零或不可导点</p>

    <ul>
      <li>二阶可导时，拐点一定能推出二阶导数为0，但是二阶导数为0不一定是拐点。</li>
    </ul>
  </li>
</ul>]]></content><author><name></name></author><category term="calculus" /><summary type="html"><![CDATA[极值点、拐点、驻点、专题总结 - 知乎 (zhihu.com)]]></summary></entry></feed>