函数库：<string.h>
函数原型：void *memset(void *s, int c, size_t n); 
返回值：返回类型是一个指向存储区s的指针。
memset是一个初始化函数，作用是将某一块内存中的全部设置为指定的值。

s指向要填充的内存块。
c是要被设置的值。
n是要被设置该值的字符数。
返回类型是一个指向存储区s的指针。

需要说明的几个地方
一、不能任意赋值
memset函数是按照字节对内存块进行初始化，所以不能用它将int数组出初始化为0和-1之外的其他值（除非该值高字节和低字节相同）。
其实c的实际范围应该在0~255，因为memset函数只能取c的后八位给所输入范围的每个字节。也就是说无论c多大只有后八位二进制是有效的。

=================================================================================================
对于int a[4];
memset(a, -1, sizeof(a)) 与 memset(a, 511, sizeof(a)) 所赋值的结果一样都为-1：
因为 -1 的二进制码为（11111111 11111111 11111111 11111111）；511 的二进制码为（00000000 00000000 00000001 11111111）；
后八位均为（11111111），所以数组中的每个字节都被赋值为（11111111）。
注意int占四个字节，例如a[0]的四个字节都被赋值为（11111111），那么a[0]（11111111 11111111 11111111 11111111），即a[0] = -1。

清空结构体类型的变量
typedef struct Stu{
	char name[20];
	int cno;
}Stu;
Stu stu1; 
memset(&stu1, 0 ,sizeof(Stu));

Stu stu2[10]; //数组
memset(stu2, 0, sizeof(Stu)*10);

此外，如果结构体中有数组的话还是需要对数组单独进行初始化处理的。////////////////////////////////////////////////////////////

memset可以方便的清空一个结构类型的变量或数组。
　　如：
　　struct sample_struct
　　{
　　char csName[16];
　　int iSeq;
　　int iType;
　　};
　　对于变量
　　struct sample_strcut stTest;
　　一般情况下，清空stTest的方法：
　　stTest.csName[0]='\0';
　　stTest.iSeq=0;
　　stTest.iType=0;
　　用memset就非常方便：
　　memset(&stTest,0,sizeof(struct sample_struct));
　　如果是数组：
　　struct sample_struct TEST[10];
　　则
　　memset(TEST,0,sizeof(struct sample_struct)*10);